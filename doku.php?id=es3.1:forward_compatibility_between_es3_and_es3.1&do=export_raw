Ideally, all valid ES3 programs should run with the same results on ES3.1 implementations. However, imposing such a strict requirement upon a language as malleable as ECMAScript would make it almost impossible to add any new features to ES3.1. Even if we introduce new functionality only by adding new methods to native objects, it is still possible to break existing code that depends upon the absence of such methods. Therefore the forward compatibility requires between ES 3 and ES 3.1 are:
  * All syntactically valid ES3 programs are also syntactically valid ES3.1 programs
  * All valid ES3 programs shall run with the same result on ES3.1 unless the program is explicitly dependent upon the absence of new native objects methods defined by ES3.1.

 --- //[[pratapl@microsoft.com|Pratap Lakshman]] 2007/04/15 01:56//

Presumably in the last point you mean it the other way around: " ... new native objects methods defined by ES3.1"

 --- //[[lth@acm.org|Lars T Hansen]] 2007/04/16 01:49//

Correct, the correction has been made.
 --- //[[Allen.Wirfs-Brock@microsoft.com|Allen Wirfs-Brock]] 2007/04/18 07:19//

Some of the features proposed for ES3.1 violate the above rule.  For example, evaluation of regular expression literals has different and incompatible semantics in ES3.1 and ES3.  This was an intentional design choice in ES3, so this is not a bug fix.
 --- //Waldemar Horwat 2008/05/29 20:42//