These are proposals we're not addressing any further.

===== Standard library issues =====

  * :!: containers, some standard container types (hashtables, red-black trees or skip-lists, sets, queues).
    * **status:** desires hashcodes, type parameters; otherwise can be done by ecosystem.
  * :!: networking, some network-access classes.
    * **status:** filesystem and network seem like host object issues







===== Deferred / post-ES4 ideas =====

These are issues that we probably can't nail down by march / april, but might want to at least talk briefly about, with the vague hope that we're not actually making them impossible to add later.

  * [[macros]], the proposal to implement some form of macro-expansion stage to the execution model.
  * [[quoting]], the proposal to add (quasi-) quoting mechanisms.
  * linked namespaces, the proposal to permit one namespace to extend another.
  * [[discussion_about_contracts|Dave Herman's discussion of contracts]] (with a bit on macros at the end)
  * [[contracts]], the proposal to add dynamic contracts with precise blame annotation.
  * [[type inference]], a dark horse proposal inspired by thinking about what unannotated variables might mean if not "top type", and then stumbling across [[http://haxe.org/|haXe]].
  * [[debug helpers]], a proposal for standardized debugging interfaces and diagnostic utilities
  * [[type refinements]], the proposal for a syntactic form allowing type annotations to be refined (narrowed) with dynamic predicates.
  * [[security wrappers]], a proposal for trying to wrap objects with security policies.
  * [[documentation]], the proposal for optional documentation texts for functions and variables [owner: Lars]
  * [[enumeration type]], a proposal on the introduction of enumeration types.
  * [[program configuration]], a proposal to allow programs to be configured during the definition phase
  * [[bound this]], a proposal to allow ''this'' to be bound to methods on plain objects
  * [[self type]], a proposal to allow the type ''Self'' (exact name TBD) in structural object types.  Probably deprecated.
  * [[oopKoolAid]], a controversial/difficult subproposal broken out from [[dictionary]]


===== Retracted specs or proposals =====

These are issues that we've decided **not** to do, along with some rationale.

  * [[drop interfaces]], the proposal to remove the concept of interfaces from the language.
  * [[group assignment]], a proposal to allow multiple value assignment and return expressions.
  * [[with-bound variables]], the proposal to distinguish access to variables bound via ''with'' from access to other variables.
  * [[user package distribution]], a la [[http://www.cpan.org|CPAN]], [[http://www.openjsan.org/|OpenJSAN]], [[http://www.haskell.org/cabal/|Haskell Cabal]], or [[http://planet.plt-scheme.org|PLaneT]].
  * [[filesystem]], some filesystem-access classes.
  * [[date literal syntax]], a proposal to support literals for dates and time stamps.
  * [[syntactic semantics]], the way we describe the meaning of individual syntactic elements
  * [[string hashcodes]], the proposal for a static "hashcode" method on string values
  * [[octal numbers]], syntax of
  * [[operators]], the proposal to permit user-defined operator overriding.
  * [[bytearray]], proposal for a built-in class for dealing with packed byte arrays efficiently
