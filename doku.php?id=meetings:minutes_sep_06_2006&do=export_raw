===== Agenda =====

  * es4-discuss items
  * number proposal review
  * yield grammar
  * recent items from wiki

===== Notes =====

  * es4-discuss
    * issue is not variance annotations being useful, it is whether they are worth their weight
    * without variance annotations, you have to encode the bounds by hand (casts, wrappers)
    * graydon: structural types want helper functions or wrappers anyway (modulo array methods, e.g.)
    * dave: consider set with abstract equality, two sets with different equality methods -- intersection breaks
    * graydon: variance annotations don't help that case

  * number proposal review
    * graydon: suffixes always recognized, but not all numeric tokens are valid? under todo, extra rules/states
    * pratap: all 0x are hex?  graydon: yes, and uint (by default and if u at end; or int if i at end)
    * asymmetry in conversion rules: int/uint overflow to double, but double does not overflow to decimal

  * yield grammar
    * yield expressions need to be parenthesized unless on right of assignment
      * even if only actual parameter: ''foo((yield))'' vs. ''bar((yield), arg2)''
    * yield statements are not parenthesized

  * backward compatibility

  * public/private/internal
    * predefined namespaces (all three in class, public and internal in packages)
    * private is special in that it can't be accessed, even explicitly, outside class or package (it can't even escape as an ns)
    * an indefinite number of user-defined public and private namespaces, you just get two for free, and open by default
