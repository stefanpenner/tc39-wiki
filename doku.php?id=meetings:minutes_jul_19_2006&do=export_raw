====== Agenda ======

  * Date literal syntax
  * Dave's type conversion proposal
  * Continuations
  * Nullability

====== Attendees ======

  * Dan
  * Jeff
  * Pratap
  * Brendan
  * Dave
  * Lars
  * Cormac

====== Discussion ======

===== Date =====

  * Lars to specify [[proposals:date literal syntax]] as sugar for ''new Date(...)''.

===== Type Conversions =====

  * See [[clarification:runtime_types_and_conversions]]
  * Lars sees untyped code either not mixing, or being converted to nominal types
  * Dave: o1 == o2 means mutations to o1 affect o2 and vice versa, so 2, 3, 5, and 6 are ok
  * Lars: copying seems like a quick fix for small programs but not useful enough to add
  * Brendan: solutions 2-6 seem likelier to win
    * solution 1 breaks abstraction
    * solution 8 costs too much (performance and/or implementation)
  * Jeff: revisiting solution 8, does it not add checks to reads as well as writes
  * Dave: more, solution 8 requires checking all reads including via differently-typed references
  * Cormac: really, same thing: check everywhere, all the time (unless a smart compiler can prove)
    * solution 8 makes strict option more like standard mode
  * Jeff: we do that in AS3
  * Dave: link-time optimizations can help
  * Jeff: solution 8 may break down for functional types (AS3 doesn't do these)
  * Jeff: "what would (naive) users expect to happen?"