<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.1" -->
<?xml-stylesheet href="http://wiki.ecmascript.org/lib/styles/feed.css" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://wiki.ecmascript.org/feed.php">
        <title>ES Wiki conventions</title>
        <description></description>
        <link>http://wiki.ecmascript.org/</link>
        <image rdf:resource="http://wiki.ecmascript.org/lib/images/favicon.ico" />
       <dc:date>2015-09-10T02:01:01+01:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:atleastes5&amp;amp;rev=1314819239"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:avoid_strictness_contagion&amp;amp;rev=1305680860"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:commonjs_adaptor&amp;amp;rev=1284584535"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:conventions&amp;amp;rev=1324101878"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:gc_complexity&amp;amp;rev=1288681642"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:isarraylike&amp;amp;rev=1316299612"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:make_non-standard_properties_configurable&amp;amp;rev=1294284544"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:no_non_standard_strict_decls&amp;amp;rev=1274982322"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:recommendations_for_implementors&amp;amp;rev=1294284873"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming&amp;amp;rev=1324364307"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://wiki.ecmascript.org/lib/images/favicon.ico">
        <title>ES Wiki</title>
        <link>http://wiki.ecmascript.org/</link>
        <url>http://wiki.ecmascript.org/lib/images/favicon.ico</url>
    </image>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:atleastes5&amp;amp;rev=1314819239">
        <dc:format>text/html</dc:format>
        <dc:date>2011-08-31T19:33:59+01:00</dc:date>
        <title>conventions:atleastes5</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:atleastes5&amp;amp;rev=1314819239</link>
        <description> To ease the transition from ES3R (ES3 approximations as implemented on currently deployed major browsers) and ES5, we suggest these detection patterns. In order for these detection patterns to be useful, it is important that upcoming incremental dep...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:avoid_strictness_contagion&amp;amp;rev=1305680860">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-18T01:07:40+01:00</dc:date>
        <title>conventions:avoid_strictness_contagion</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:avoid_strictness_contagion&amp;amp;rev=1305680860</link>
        <description> In ES5, one can either opt-in to strict mode   on a per-program basis, by putting the &amp;ldquo;use strict&amp;rdquo; directive at the top of a Program production,  or a per-function basis, by putting the &amp;ldquo;use strict&amp;rdquo; directive at the top of a ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:commonjs_adaptor&amp;amp;rev=1284584535">
        <dc:format>text/html</dc:format>
        <dc:date>2010-09-15T21:02:15+01:00</dc:date>
        <title>conventions:commonjs_adaptor</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:commonjs_adaptor&amp;amp;rev=1284584535</link>
        <description> The following is a lighweight self-contained (infrastructure-free) pattern for writing files that can be  used as CommonJS modules (1.0),  used as ES3R, ES5, ES5/strict, or SES browser-side scripts, or  losslessly concatenated together into larger s...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:conventions&amp;amp;rev=1324101878">
        <dc:format>text/html</dc:format>
        <dc:date>2011-12-17T06:04:38+01:00</dc:date>
        <title>conventions:conventions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:conventions&amp;amp;rev=1324101878</link>
        <description> This page collects non-normative patterns and snippets of code offered as an agreed compromise to unify existing diverse practices, as suggested by Mike Wilson, and to ease the transitions among EcmaScript versions.  Recommendations for Implementors...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:gc_complexity&amp;amp;rev=1288681642">
        <dc:format>text/html</dc:format>
        <dc:date>2010-11-02T07:07:22+01:00</dc:date>
        <title>conventions:gc_complexity</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:gc_complexity&amp;amp;rev=1288681642</link>
        <description> On the es-discuss list, two implementation objections have been raised regarding weak maps:  The apparent O(n**2) complexity measure.  The apparent need for a large atomic operation.   Indeed, the abstract GC algorithm on that page has these two pro...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:isarraylike&amp;amp;rev=1316299612">
        <dc:format>text/html</dc:format>
        <dc:date>2011-09-17T22:46:52+01:00</dc:date>
        <title>conventions:isarraylike</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:isarraylike&amp;amp;rev=1316299612</link>
        <description> Further discussion of this topic on es-discuss has convinced its original proposer, MarkM, that there is no coherent general convention for isArrayLike that can be rescued and reconciled with existing practice. Accordingly, I have stopped editing th...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:make_non-standard_properties_configurable&amp;amp;rev=1294284544">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-06T03:29:04+01:00</dc:date>
        <title>conventions:make_non-standard_properties_configurable</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:make_non-standard_properties_configurable&amp;amp;rev=1294284544</link>
        <description> Chapter 16 allows implementations to add non-standard properties to built-in native objects. Like standard native properties, it is desirable for non-standard properties to start out configurable, so that initialization scripts can replace or remove...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:no_non_standard_strict_decls&amp;amp;rev=1274982322">
        <dc:format>text/html</dc:format>
        <dc:date>2010-05-27T17:45:22+01:00</dc:date>
        <title>conventions:no_non_standard_strict_decls</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:no_non_standard_strict_decls&amp;amp;rev=1274982322</link>
        <description> In strict mode code:  Do not implemented any non-standard statements or declarations that begin with the keywords const or let.  Do not allow a FunctionDeclaration to occur in a Statement context.   Why  The current TC39 plan of record is to include...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:recommendations_for_implementors&amp;amp;rev=1294284873">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-06T03:34:33+01:00</dc:date>
        <title>conventions:recommendations_for_implementors</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:recommendations_for_implementors&amp;amp;rev=1294284873</link>
        <description> The members of TC39 recommend these items as best practices that implementors should follow in implementing ES5 and extending it. Following these best practices will improve interoperability among ES5 implementations and minimize the risk of that an...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming&amp;amp;rev=1324364307">
        <dc:format>text/html</dc:format>
        <dc:date>2011-12-20T06:58:27+01:00</dc:date>
        <title>conventions:safe_meta_programming</title>
        <link>http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming&amp;amp;rev=1324364307</link>
        <description> How does one write a JavaScript meta-program that can operate reliably on other objects in its JavaScript context (in a browser &amp;ndash; within the same frame), despite the loading of arbitrary code later into that same frame? The problem is that the...</description>
    </item>
</rdf:RDF>
