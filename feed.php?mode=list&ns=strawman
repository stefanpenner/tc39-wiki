<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.1" -->
<?xml-stylesheet href="http://wiki.ecmascript.org/lib/styles/feed.css" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://wiki.ecmascript.org/feed.php">
        <title>ES Wiki strawman</title>
        <description></description>
        <link>http://wiki.ecmascript.org/</link>
        <image rdf:resource="http://wiki.ecmascript.org/lib/images/favicon.ico" />
       <dc:date>2015-09-09T15:27:17+01:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:accepted&amp;amp;rev=1362727003"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:allen_wirfs-brock_s_comments_on_ephemeron_table_proposal&amp;amp;rev=1269457840"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:alpha-rename&amp;amp;rev=1262966471"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:array.prototype.has&amp;amp;rev=1353074863"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:array.prototype.pushall&amp;amp;rev=1320102365"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:array_comprehensions&amp;amp;rev=1306797202"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:array_create&amp;amp;rev=1300471523"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:array_extras&amp;amp;rev=1323275465"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:array_fill_and_move&amp;amp;rev=1374612446"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:array_statics&amp;amp;rev=1300052946"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:array_subtypes&amp;amp;rev=1295485784"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:arrow_function_syntax&amp;amp;rev=1338053638"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:assert&amp;amp;rev=1329202844"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:ast&amp;amp;rev=1309988911"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:async_functions&amp;amp;rev=1391107608"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:attach&amp;amp;rev=1322042290"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:basic_object_literal_extensions&amp;amp;rev=1306424618"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:batch_assignment_operator&amp;amp;rev=1320907194"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:bignums&amp;amp;rev=1285624954"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:binary_data&amp;amp;rev=1303947145"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:binary_data_discussion&amp;amp;rev=1303947265"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:binary_data_semantics&amp;amp;rev=1303947200"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:binary_integer_literals&amp;amp;rev=1373915908"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:bind_operator&amp;amp;rev=1332956237"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:block_lambda_revival&amp;amp;rev=1326595144"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:block_vs_object_literal&amp;amp;rev=1309927666"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:branding_classes&amp;amp;rev=1305500250"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:case_conversion&amp;amp;rev=1362729362"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:catch_guards&amp;amp;rev=1298941886"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:catchalls&amp;amp;rev=1242265020"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:class_method_syntax&amp;amp;rev=1373587056"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:class_operator&amp;amp;rev=1321721345"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:class_private_state&amp;amp;rev=1369561509"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:classes&amp;amp;rev=1262831855"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:classes_as_inheritance_sugar&amp;amp;rev=1290396281"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:classes_as_sugar&amp;amp;rev=1290284331"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:classes_with_trait_composition&amp;amp;rev=1306099052"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:classes_without_trait_composition&amp;amp;rev=1306644106"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:communicating_event_loop_concurrency&amp;amp;rev=1369561239"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:completion_let&amp;amp;rev=1298937745"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:completion_reform&amp;amp;rev=1306797376"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:concise_object_literal_extensions&amp;amp;rev=1306389933"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&amp;amp;rev=1371397600"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:cond_expressions&amp;amp;rev=1299107023"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:const_functions&amp;amp;rev=1283695930"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:data_parallelism&amp;amp;rev=1392922569"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:debugger_expressions&amp;amp;rev=1299182503"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:default_operator&amp;amp;rev=1340005983"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:defensible_classes&amp;amp;rev=1369799084"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:deferred&amp;amp;rev=1338221011"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:deferred_functions&amp;amp;rev=1319918765"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:define_properties_operator&amp;amp;rev=1344439475"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:defineproperty_reject_behavior&amp;amp;rev=1322119482"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:derived_traps_forwarding_handler&amp;amp;rev=1323070638"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:dicts&amp;amp;rev=1300048027"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:direct_proxies&amp;amp;rev=1322046298"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:do_expressions&amp;amp;rev=1320990246"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:embracing_workers&amp;amp;rev=1379535166"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:encapsulated_hashcodes&amp;amp;rev=1359676221"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:enumeration&amp;amp;rev=1300046981"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:error_stack&amp;amp;rev=1343944519"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:es5_internal_methods&amp;amp;rev=1299277249"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:es5_internal_nominal_typing&amp;amp;rev=1340145137"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator&amp;amp;rev=1340039977"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:extended_object_api&amp;amp;rev=1280440363"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:fix_function_name_binding&amp;amp;rev=1295499781"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:fixed_properties&amp;amp;rev=1310554207"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:fixing_override_mistake&amp;amp;rev=1326142332"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:free-vars&amp;amp;rev=1262237580"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:full_unicode_source_code&amp;amp;rev=1337813509"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:function_proxy_prototype&amp;amp;rev=1301513925"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:function_to_string&amp;amp;rev=1306647313"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:gc_semantics&amp;amp;rev=1321139828"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:generator_expressions&amp;amp;rev=1303946845"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:generators&amp;amp;rev=1303946764"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:globalization-integration&amp;amp;rev=1326769836"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:guards&amp;amp;rev=1306360745"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:handler_access_to_proxy&amp;amp;rev=1301515043"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:has_operator&amp;amp;rev=1298929579"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:i18n_api&amp;amp;rev=1320192811"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:identifier_identification&amp;amp;rev=1381368576"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:inherited_explicit_soft_fields&amp;amp;rev=1306350412"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:instance_variables&amp;amp;rev=1300668947"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:iterator_conveniences&amp;amp;rev=1309204923"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:iterators&amp;amp;rev=1303946791"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:json_path&amp;amp;rev=1292515470"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:lambdas&amp;amp;rev=1228443749"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:let_expressions&amp;amp;rev=1274489843"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:lexical_scope&amp;amp;rev=1223610047"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:magic_proto_property&amp;amp;rev=1329596791"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:match_web_reality&amp;amp;rev=1306223695"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:match_web_reality_spec&amp;amp;rev=1306224346"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:maximally_minimal_classes&amp;amp;rev=1373587115"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:minimal_classes&amp;amp;rev=1320989373"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:minimal_classes_as_constructors&amp;amp;rev=1337631193"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:module_loaders&amp;amp;rev=1300917425"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:modules&amp;amp;rev=1259883480"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:modules_emaker_style&amp;amp;rev=1264569372"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:modules_harmonic&amp;amp;rev=1274206362"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:modules_packages&amp;amp;rev=1264552060"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:modules_primordials&amp;amp;rev=1269046767"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:modulo_operator&amp;amp;rev=1300911395"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:multiline_regexps&amp;amp;rev=1309535735"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:multiple_globals&amp;amp;rev=1306797569"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:name_property_of_functions&amp;amp;rev=1373587096"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:names&amp;amp;rev=1293058507"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:names_vs_soft_fields&amp;amp;rev=1299184641"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:narrowing_chapter_16&amp;amp;rev=1325016984"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:number_compare&amp;amp;rev=1297901569"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:number_epsilon&amp;amp;rev=1338052672"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:number_isfinite&amp;amp;rev=1303949998"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:number_isinteger&amp;amp;rev=1303951637"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:number_isnan&amp;amp;rev=1303950203"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:number_max_integer&amp;amp;rev=1338052816"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_class_abstraction&amp;amp;rev=1300572069"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_const&amp;amp;rev=1300891282"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_constructors&amp;amp;rev=1299089245"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_meta&amp;amp;rev=1300479470"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_methods&amp;amp;rev=1300808362"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_private&amp;amp;rev=1299087081"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:object_extension_literals&amp;amp;rev=1338241245"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_extensions&amp;amp;rev=1305928579"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_initialization_blocks&amp;amp;rev=1300563896"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_shorthand&amp;amp;rev=1318272944"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_super&amp;amp;rev=1305920729"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:object_isobject&amp;amp;rev=1303948810"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:object_model_reformation&amp;amp;rev=1334794935"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:observe&amp;amp;rev=1348241195"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:oldes6&amp;amp;rev=1373301616"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:operator_overloading_with_double_dispatch&amp;amp;rev=1332901921"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:parameters_property_of_functions&amp;amp;rev=1295457993"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:paren_free&amp;amp;rev=1307308065"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:pattern_matching&amp;amp;rev=1298937489"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:pragmas&amp;amp;rev=1306266163"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:private_name_objects&amp;amp;rev=1306275478"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:private_names&amp;amp;rev=1305683355"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:private_names_in_object_initialisers&amp;amp;rev=1300813524"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:promises&amp;amp;rev=1370804222"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proper_tail_calls&amp;amp;rev=1295658735"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proto_operator&amp;amp;rev=1308283043"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proxies&amp;amp;rev=1265075824"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proxies_names&amp;amp;rev=1358283739"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proxies_semantics&amp;amp;rev=1265076159"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_defaulthandler&amp;amp;rev=1295894740"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_derived_traps&amp;amp;rev=1301999129"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_drop_receiver&amp;amp;rev=1304492515"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_instanceof&amp;amp;rev=1292403960"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_set_trap&amp;amp;rev=1304494284"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_symbol_decoupled&amp;amp;rev=1360005899"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-alt&amp;amp;rev=1263230240"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-desugaring-cachekey&amp;amp;rev=1306359989"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-desugaring-curried&amp;amp;rev=1301349993"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-desugaring-uncurried&amp;amp;rev=1300925278"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-literalportion-simple&amp;amp;rev=1300916295"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-quasitag-memberexpr&amp;amp;rev=1301349968"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-quasitag-simple&amp;amp;rev=1300916973"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-primaryexpr&amp;amp;rev=1307206480"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-simple-members&amp;amp;rev=1301350053"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-slot&amp;amp;rev=1308276446"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-thunk&amp;amp;rev=1301350003"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:quasis&amp;amp;rev=1306794675"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:random-er&amp;amp;rev=1307649782"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:records&amp;amp;rev=1301790690"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:refactoring_put&amp;amp;rev=1322040395"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:regexp_look-behind_support&amp;amp;rev=1332260334"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:regexp_x_flag&amp;amp;rev=1294077331"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:regexp_y_flag&amp;amp;rev=1303949415"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:relationships&amp;amp;rev=1375695716"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:return_to_label&amp;amp;rev=1223728758"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:revokable_proxies&amp;amp;rev=1348487235"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:sandbox_vs_maker&amp;amp;rev=1266716229"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:scoped_object_extensions&amp;amp;rev=1304055125"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:shallow_continuations&amp;amp;rev=1274676925"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:shorter_function_syntax&amp;amp;rev=1300914034"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:simd_number&amp;amp;rev=1381425008"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:simple_maps_and_sets&amp;amp;rev=1306645156"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:simple_module_functions&amp;amp;rev=1295842330"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:simple_modules&amp;amp;rev=1300917365"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:simple_modules_examples&amp;amp;rev=1300917397"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:simultaneous_iteration&amp;amp;rev=1356064608"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:soft_bind&amp;amp;rev=1299177214"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:specification_language&amp;amp;rev=1274152634"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:steve_levithan_regexp_api_improvements&amp;amp;rev=1295923429"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:stoptrapping&amp;amp;rev=1322042733"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:strawman&amp;amp;rev=1392402503"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:string_at&amp;amp;rev=1392402625"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:string_extensions&amp;amp;rev=1392402247"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:string_extras&amp;amp;rev=1306795242"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:string_format&amp;amp;rev=1292456304"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:string_format_take_two&amp;amp;rev=1300148601"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:string_interpolation&amp;amp;rev=1257468232"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:string_padding&amp;amp;rev=1438197652"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:string_repeat&amp;amp;rev=1303950829"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:structured_clone&amp;amp;rev=1389719694"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:subclassable-builtins&amp;amp;rev=1342645418"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:super_in_object_initialisers&amp;amp;rev=1300576105"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:support_full_unicode_in_strings&amp;amp;rev=1337813135"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:syntactic_support_for_private_names&amp;amp;rev=1346194786"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:syntax_for_efficient_traits&amp;amp;rev=1285318087"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:system&amp;amp;rev=1278457032"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:terminology&amp;amp;rev=1335894673"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:trademarks&amp;amp;rev=1304714263"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:trait_composition_for_classes&amp;amp;rev=1305617947"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:traits_semantics&amp;amp;rev=1291524279"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:tuples&amp;amp;rev=1301790667"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:typed_arrays&amp;amp;rev=1305698290"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:types&amp;amp;rev=1243636039"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:unicode_normalization&amp;amp;rev=1338335354"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:unicode_support&amp;amp;rev=1280534598"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:uniform_proxies&amp;amp;rev=1265081156"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:unique_string_values&amp;amp;rev=1305680106"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:value_objects&amp;amp;rev=1335663809"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:value_proxies&amp;amp;rev=1306900084"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:value_types&amp;amp;rev=1374086920"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:versioning&amp;amp;rev=1325365836"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:weak_references&amp;amp;rev=1383967452"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:weak_refs&amp;amp;rev=1359843943"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:weakreferences&amp;amp;rev=1369560552"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=strawman:withdrawn&amp;amp;rev=1346092671"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://wiki.ecmascript.org/lib/images/favicon.ico">
        <title>ES Wiki</title>
        <link>http://wiki.ecmascript.org/</link>
        <url>http://wiki.ecmascript.org/lib/images/favicon.ico</url>
    </image>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:accepted&amp;amp;rev=1362727003">
        <dc:format>text/html</dc:format>
        <dc:date>2013-03-08T07:16:43+01:00</dc:date>
        <title>strawman:accepted</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:accepted&amp;amp;rev=1362727003</link>
        <description> These proposal have been promoted to harmony proposals status or incorporated into another promoted proposal. See harmony proposals for the full list of promoted items.   Functions  arrow function syntax, a synthesis of the above two with &amp;ldquo;Har...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:allen_wirfs-brock_s_comments_on_ephemeron_table_proposal&amp;amp;rev=1269457840">
        <dc:format>text/html</dc:format>
        <dc:date>2010-03-24T19:10:40+01:00</dc:date>
        <title>strawman:allen_wirfs-brock_s_comments_on_ephemeron_table_proposal</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:allen_wirfs-brock_s_comments_on_ephemeron_table_proposal&amp;amp;rev=1269457840</link>
        <description> I don’t have any principled objections to the Ephemeron proposal. I do have a lot of nits. I’ll try to list them ordered in approximately decreasing importance.  1) We should expose the EphemeronTable functionality using more user approachable conce...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:alpha-rename&amp;amp;rev=1262966471">
        <dc:format>text/html</dc:format>
        <dc:date>2010-01-08T16:01:11+01:00</dc:date>
        <title>strawman:alpha-rename</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:alpha-rename&amp;amp;rev=1262966471</link>
        <description> Draft Implementation Tests  Alpha Renaming  An α-renaming is a function mapping function bodies to function bodies with identical semantics but that contain no masking identifiers. This assumes that local variables in the renamed program are not mea...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:array.prototype.has&amp;amp;rev=1353074863">
        <dc:format>text/html</dc:format>
        <dc:date>2012-11-16T14:07:43+01:00</dc:date>
        <title>strawman:array.prototype.has</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:array.prototype.has&amp;amp;rev=1353074863</link>
        <description> Add a has generic method to Array.prototype that determines if the array contains a given value, determined by the internal [[SameValue]] algorithm.   Spec   15.5.4.27 Array.prototype.has (searchElement, fromIndex = 0)  has compares searchElement to...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:array.prototype.pushall&amp;amp;rev=1320102365">
        <dc:format>text/html</dc:format>
        <dc:date>2011-10-31T23:06:05+01:00</dc:date>
        <title>strawman:array.prototype.pushall</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:array.prototype.pushall&amp;amp;rev=1320102365</link>
        <description> Add a pushAll generic method to Array.prototype for pushing all elements of an array-like object to the end of this array-like object.  Currently, you can do this by calling a1.push.apply(a1, a2) but it can blow the stack on popular engines if a2 is...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:array_comprehensions&amp;amp;rev=1306797202">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-30T23:13:22+01:00</dc:date>
        <title>strawman:array_comprehensions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:array_comprehensions&amp;amp;rev=1306797202</link>
        <description> See array_comprehensions   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:array_create&amp;amp;rev=1300471523">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-18T18:05:23+01:00</dc:date>
        <title>strawman:array_create</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:array_create&amp;amp;rev=1300471523</link>
        <description> It is proposed that a create property be added to the Array constructor, being a function that is similar to Object.create, creating a new array that inherits from the first argument (which will usually be an object. If there is an optional second a...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:array_extras&amp;amp;rev=1323275465">
        <dc:format>text/html</dc:format>
        <dc:date>2011-12-07T16:31:05+01:00</dc:date>
        <title>strawman:array_extras</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:array_extras&amp;amp;rev=1323275465</link>
        <description> The Array constructor is brittle due to its special-case behavior on single numeric arguments; this is the rationale behind a simpler, more uniform factory function for creating arrays (Array.of).  There are many array-like objects in JS (arguments ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:array_fill_and_move&amp;amp;rev=1374612446">
        <dc:format>text/html</dc:format>
        <dc:date>2013-07-23T20:47:26+01:00</dc:date>
        <title>strawman:array_fill_and_move</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:array_fill_and_move&amp;amp;rev=1374612446</link>
        <description> The Khronos group want to add Typed Array methods for setting a range of elements in a Typed Array Elements and for internally copying a range of elements to a new position within the array.  ES6 is trying to better integrate Typed Array into ECMASc...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:array_statics&amp;amp;rev=1300052946">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-13T21:49:06+01:00</dc:date>
        <title>strawman:array_statics</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:array_statics&amp;amp;rev=1300052946</link>
        <description> Some of the generic array methods would work just fine on array-like objects (such as arguments objects, DOM sequences, or strings), but right now you have to use [].method.call(x, ...) or Array.prototype.method.call(x, xxx) which is unwieldy and co...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:array_subtypes&amp;amp;rev=1295485784">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-20T01:09:44+01:00</dc:date>
        <title>strawman:array_subtypes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:array_subtypes&amp;amp;rev=1295485784</link>
        <description> A common request from developers is for a mechanism that allows the creation of a &amp;ldquo;Array subtype&amp;rdquo;. An Array subtype is in essence an Array instance with a custom prototype chain.   Proposal  We propose the addition of a &amp;lsquo;createCons...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:arrow_function_syntax&amp;amp;rev=1338053638">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-26T17:33:58+01:00</dc:date>
        <title>strawman:arrow_function_syntax</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:arrow_function_syntax&amp;amp;rev=1338053638</link>
        <description> Accepted, see Harmony proposal: arrow function syntax   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:assert&amp;amp;rev=1329202844">
        <dc:format>text/html</dc:format>
        <dc:date>2012-02-14T07:00:44+01:00</dc:date>
        <title>strawman:assert</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:assert&amp;amp;rev=1329202844</link>
        <description> Create a standardized way for programs to test invariants.   Examples   Asserting: assert&amp;#40;x === 12&amp;#41;; // throws an AssertionError if false, with a default error message assert&amp;#40;x === 12, &quot;I think it should be twelve&quot;&amp;#41; // throws an Asse...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:ast&amp;amp;rev=1309988911">
        <dc:format>text/html</dc:format>
        <dc:date>2011-07-06T21:48:31+01:00</dc:date>
        <title>strawman:ast</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:ast&amp;amp;rev=1309988911</link>
        <description> This page is a placeholder for a Harmony specification for a parser which parses ECMAScript text into a standard abstract syntax tree made up of ECMAScript objects. A proposal is taking shape at http://code.google.com/p/es-lab/wiki/JsonMLASTFormat. ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:async_functions&amp;amp;rev=1391107608">
        <dc:format>text/html</dc:format>
        <dc:date>2014-01-30T18:46:48+01:00</dc:date>
        <title>strawman:async_functions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:async_functions&amp;amp;rev=1391107608</link>
        <description> [Note - this proposal is also on https://github.com/lukehoban/ecmascript-asyncawait which may be more up to date]   The introduction of Promises and Generators in ECMAScript presents an opportunity to dramatically improve the language - level model ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:attach&amp;amp;rev=1322042290">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-23T09:58:10+01:00</dc:date>
        <title>strawman:attach</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:attach&amp;amp;rev=1322042290</link>
        <description> Given that direct proxies are not in a position to violate any of the non-configurability or non-extensibility constraints of their wrapped target, it should be safe to replace an existing normal object by a direct proxy wrapping that object. This w...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:basic_object_literal_extensions&amp;amp;rev=1306424618">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-26T15:43:38+01:00</dc:date>
        <title>strawman:basic_object_literal_extensions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:basic_object_literal_extensions&amp;amp;rev=1306424618</link>
        <description> Allen Wirfs-Brock Original Proposal August 10, 2009  Revised Proposal March 2011  Simplified Proposal May 2011  Abstraction creation is a central theme of object-based programming and ECMAScript provides many mechanisms that support patterns for cre...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:batch_assignment_operator&amp;amp;rev=1320907194">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-10T06:39:54+01:00</dc:date>
        <title>strawman:batch_assignment_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:batch_assignment_operator&amp;amp;rev=1320907194</link>
        <description> A convenient syntax for copying multiple own-properties from one object into another. This exists in current frameworks (up to minor differences) as an extend method.   Examples x .= &amp;#123; foo: 1, bar: &quot;bar&quot;, baz: true &amp;#125;; &amp;nbsp; obj1 .= obj2; ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:bignums&amp;amp;rev=1285624954">
        <dc:format>text/html</dc:format>
        <dc:date>2010-09-27T22:02:34+01:00</dc:date>
        <title>strawman:bignums</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:bignums&amp;amp;rev=1285624954</link>
        <description> Arbitrary-precision integers (or &amp;ldquo;bignums&amp;rdquo;) are a great compromise between correctness and performance. Moreover, they really suffer without built-in syntax. This strawman proposes adding a new primitive type of arbitrary-precision integ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:binary_data&amp;amp;rev=1303947145">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-27T23:32:25+01:00</dc:date>
        <title>strawman:binary_data</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:binary_data&amp;amp;rev=1303947145</link>
        <description> See binary data.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:binary_data_discussion&amp;amp;rev=1303947265">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-27T23:34:25+01:00</dc:date>
        <title>strawman:binary_data_discussion</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:binary_data_discussion&amp;amp;rev=1303947265</link>
        <description> See binary data discussion.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:binary_data_semantics&amp;amp;rev=1303947200">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-27T23:33:20+01:00</dc:date>
        <title>strawman:binary_data_semantics</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:binary_data_semantics&amp;amp;rev=1303947200</link>
        <description> See binary data semantics.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:binary_integer_literals&amp;amp;rev=1373915908">
        <dc:format>text/html</dc:format>
        <dc:date>2013-07-15T19:18:28+01:00</dc:date>
        <title>strawman:binary_integer_literals</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:binary_integer_literals&amp;amp;rev=1373915908</link>
        <description> It&amp;rsquo;s nice to represent numbers in a way that matches the context in which they are being used in a program. JavaScript&amp;rsquo;s use of binary data is steadily growing on the web in the form of Typed Arrays and WebGL, as well as embedded program...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:bind_operator&amp;amp;rev=1332956237">
        <dc:format>text/html</dc:format>
        <dc:date>2012-03-28T17:37:17+01:00</dc:date>
        <title>strawman:bind_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:bind_operator&amp;amp;rev=1332956237</link>
        <description> Native syntax for f.bind(self): const hasOwnProperty = Object.prototype.hasOwnProperty; function hasOwn&amp;#40;obj, key&amp;#41; &amp;#123;   return obj::hasOwnProperty&amp;#40;key&amp;#41;; &amp;#125; Calling a superclass constructor: function MySubClass&amp;#40;x, y, z&amp;#41;...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:block_lambda_revival&amp;amp;rev=1326595144">
        <dc:format>text/html</dc:format>
        <dc:date>2012-01-15T02:39:04+01:00</dc:date>
        <title>strawman:block_lambda_revival</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:block_lambda_revival&amp;amp;rev=1326595144</link>
        <description> As a mutually exclusive alternative to arrow function syntax, inspired by the long es-discuss thread Allen's lambda syntax proposal and echoes and followups since, here is a proposal for Tennent Correspondence Principle, AKA &amp;ldquo;Principle of Abst...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:block_vs_object_literal&amp;amp;rev=1309927666">
        <dc:format>text/html</dc:format>
        <dc:date>2011-07-06T04:47:46+01:00</dc:date>
        <title>strawman:block_vs_object_literal</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:block_vs_object_literal&amp;amp;rev=1309927666</link>
        <description> Both arrow function syntax and block lambda revival want, for different reasons, blocks and object literals to be usable in the same context: as an expression-like body of an arrow function, as the zero-argument form of a block-lambda.  Independent ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:branding_classes&amp;amp;rev=1305500250">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-15T22:57:30+01:00</dc:date>
        <title>strawman:branding_classes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:branding_classes&amp;amp;rev=1305500250</link>
        <description> This strawman is an experiment in merging classes_with_trait_composition with guards and trademarks. The basic idea is that each class also serves as the guard for a unique unforgeable trademark, where only the instances of the class are branded wit...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:case_conversion&amp;amp;rev=1362729362">
        <dc:format>text/html</dc:format>
        <dc:date>2013-03-08T07:56:02+01:00</dc:date>
        <title>strawman:case_conversion</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:case_conversion&amp;amp;rev=1362729362</link>
        <description> This proposal has been accepted for the second edition of the ECMAScript Internationalization API Specification at the November 2012 TC 39 meeting, and has been integrated into section 13.1 of the first draft of that specification.    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:catch_guards&amp;amp;rev=1298941886">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-01T01:11:26+01:00</dc:date>
        <title>strawman:catch_guards</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:catch_guards&amp;amp;rev=1298941886</link>
        <description> Programs often need to catch exceptions conditionally. In portable ES, they have to write it like so:  try &amp;#123;   ... &amp;#125; catch &amp;#40;e&amp;#41; &amp;#123;   if &amp;#40;p&amp;#40;e&amp;#41;&amp;#41; &amp;#123;     ...   &amp;#125; else &amp;#123;     throw e;   &amp;#125; &amp;#125;  whe...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:catchalls&amp;amp;rev=1242265020">
        <dc:format>text/html</dc:format>
        <dc:date>2009-05-14T01:37:00+01:00</dc:date>
        <title>strawman:catchalls</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:catchalls&amp;amp;rev=1242265020</link>
        <description>  &amp;mdash; Brendan Eich 2009/05/04 22:20 &amp;mdash; Allen Wirfs-Brock 2009/05/05 01:09   Feedback  In the function defined for the example&amp;rsquo;s invoke item the first argument to apply probably should be obj rather than peer.  I would be inclined to sp...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:class_method_syntax&amp;amp;rev=1373587056">
        <dc:format>text/html</dc:format>
        <dc:date>2013-07-11T23:57:36+01:00</dc:date>
        <title>strawman:class_method_syntax</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:class_method_syntax&amp;amp;rev=1373587056</link>
        <description> This proposal has progressed to the Draft ECMAScript 6 Specification, which is available for review here: specification_drafts. Any new issues relating to them should be filed as bugs at http://bugs.ecmascript.org. The content on this page is for hi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:class_operator&amp;amp;rev=1321721345">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-19T16:49:05+01:00</dc:date>
        <title>strawman:class_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:class_operator&amp;amp;rev=1321721345</link>
        <description> For ES.next we all want to provide better ways for ES programers to define named abstractions over objects. One way to do this that we have discussed is &amp;ldquo;Object exemplars&amp;rdquo; (http://www.mail-archive.com/es-discuss@mozilla.org/msg10365.html...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:class_private_state&amp;amp;rev=1369561509">
        <dc:format>text/html</dc:format>
        <dc:date>2013-05-26T09:45:09+01:00</dc:date>
        <title>strawman:class_private_state</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:class_private_state&amp;amp;rev=1369561509</link>
        <description> relationships    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:classes&amp;amp;rev=1262831855">
        <dc:format>text/html</dc:format>
        <dc:date>2010-01-07T02:37:35+01:00</dc:date>
        <title>strawman:classes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:classes&amp;amp;rev=1262831855</link>
        <description> EcmaScript needs better support for providing high-integrity objects with data abstraction and hiding, and for private fields and methods. Several frameworks provide patterns for building class-like systems, but there are several advantages to provi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:classes_as_inheritance_sugar&amp;amp;rev=1290396281">
        <dc:format>text/html</dc:format>
        <dc:date>2010-11-22T03:24:41+01:00</dc:date>
        <title>strawman:classes_as_inheritance_sugar</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:classes_as_inheritance_sugar&amp;amp;rev=1290396281</link>
        <description> not yet ready  Classes as Inheritance Sugar   The main complaint I have heard about classes with trait composition is that it does not use JavaScript&amp;rsquo;s prototype chain in order to either  provide the instance of a class with shared methods of ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:classes_as_sugar&amp;amp;rev=1290284331">
        <dc:format>text/html</dc:format>
        <dc:date>2010-11-20T20:18:51+01:00</dc:date>
        <title>strawman:classes_as_sugar</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:classes_as_sugar&amp;amp;rev=1290284331</link>
        <description> ES5 makes high integrity possible but not convenient. This strawman suggests further syntactic conveniences beyond those in High_Integrity_Factories  This strawman depends on the block scoped bindings and weak maps proposals and the const functions ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:classes_with_trait_composition&amp;amp;rev=1306099052">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-22T21:17:32+01:00</dc:date>
        <title>strawman:classes_with_trait_composition</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:classes_with_trait_composition&amp;amp;rev=1306099052</link>
        <description> ECMAScript already has excellent features for defining abstractions for kinds of things. The trinity of constructor functions, prototypes, and instances are more than adequate for solving the problems that classes solve in other languages. The inten...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:classes_without_trait_composition&amp;amp;rev=1306644106">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-29T04:41:46+01:00</dc:date>
        <title>strawman:classes_without_trait_composition</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:classes_without_trait_composition&amp;amp;rev=1306644106</link>
        <description> See classes   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:communicating_event_loop_concurrency&amp;amp;rev=1369561239">
        <dc:format>text/html</dc:format>
        <dc:date>2013-05-26T09:40:39+01:00</dc:date>
        <title>strawman:communicating_event_loop_concurrency</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:communicating_event_loop_concurrency&amp;amp;rev=1369561239</link>
        <description> Promises  concurrency  An exploration of communicating event loops in Javascript   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:completion_let&amp;amp;rev=1298937745">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-01T00:02:25+01:00</dc:date>
        <title>strawman:completion_let</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:completion_let&amp;amp;rev=1298937745</link>
        <description> A simple expression form for doing local bindings.   Syntax  Expression ::= ... | &amp;quot;let&amp;quot; &amp;quot;(&amp;quot; (LetBinding (&amp;quot;,&amp;quot; LetBinding)*)? &amp;quot;)&amp;quot; Block LetBinding ::= Pattern(false) (&amp;quot;=&amp;quot; AssignmentExpression)?  See pa...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:completion_reform&amp;amp;rev=1306797376">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-30T23:16:16+01:00</dc:date>
        <title>strawman:completion_reform</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:completion_reform&amp;amp;rev=1306797376</link>
        <description> See completion_reform   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:concise_object_literal_extensions&amp;amp;rev=1306389933">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-26T06:05:33+01:00</dc:date>
        <title>strawman:concise_object_literal_extensions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:concise_object_literal_extensions&amp;amp;rev=1306389933</link>
        <description> This is a set of syntactically concise extensions that cover the most common object property creation use cases that are not covered by the current ObjectLiteral syntax:   Motivation  All properties of objects created using object literal syntax cur...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&amp;amp;rev=1371397600">
        <dc:format>text/html</dc:format>
        <dc:date>2013-06-16T15:46:40+01:00</dc:date>
        <title>strawman:concurrency</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&amp;amp;rev=1371397600</link>
        <description> On both the browser and the server, JavaScript&amp;rsquo;s de-facto concurrency model is increasingly &amp;ldquo;shared nothing&amp;rdquo; communicating event loops. JavaScript event loops within the browser (both frames and workers) send asynchronous messages ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:cond_expressions&amp;amp;rev=1299107023">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-02T23:03:43+01:00</dc:date>
        <title>strawman:cond_expressions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:cond_expressions&amp;amp;rev=1299107023</link>
        <description> Similar to Scheme and Lisp&amp;rsquo;s cond. You can see people simulate this with nested ternary conditional expressions.   Syntax  CondExpression ::= &amp;quot;cond&amp;quot; &amp;quot;{&amp;quot; CaseBlockClause+ DefaultBlockClause? &amp;quot;}&amp;quot; CaseBlockClause ::=...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:const_functions&amp;amp;rev=1283695930">
        <dc:format>text/html</dc:format>
        <dc:date>2010-09-05T14:12:10+01:00</dc:date>
        <title>strawman:const_functions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:const_functions&amp;amp;rev=1283695930</link>
        <description> This page proposes to allow the const keyword to appear wherever the function keyword is allowed, with the following consequences:  The defined function is born frozen.  The defined function&amp;rsquo;s prototype property is born frozen.  If the form de...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:data_parallelism&amp;amp;rev=1392922569">
        <dc:format>text/html</dc:format>
        <dc:date>2014-02-20T18:56:09+01:00</dc:date>
        <title>strawman:data_parallelism</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:data_parallelism&amp;amp;rev=1392922569</link>
        <description> This proposal describes a gentle extension to EcmaScript that will enable access to the parallelism found in modern processors.   Goals  The goal of this proposal is to enable data-parallelism in web applications. Browser applications and in particu...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:debugger_expressions&amp;amp;rev=1299182503">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-03T20:01:43+01:00</dc:date>
        <title>strawman:debugger_expressions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:debugger_expressions&amp;amp;rev=1299182503</link>
        <description> The debugger keyword is used by debuggers such as FireBug to allow programmers to set breakpoints programmatically. But it can&amp;rsquo;t be used to set a breakpoint in the middle of an expression, since it is a statement form.  This strawman proposes ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:default_operator&amp;amp;rev=1340005983">
        <dc:format>text/html</dc:format>
        <dc:date>2012-06-18T07:53:03+01:00</dc:date>
        <title>strawman:default_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:default_operator&amp;amp;rev=1340005983</link>
        <description> The short-circuiting logical-or connective || is often used as a default operator. If an expression would produce a falsy value, then appending || and another expression will fill in a default value instead. possible_value || default_value This work...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:defensible_classes&amp;amp;rev=1369799084">
        <dc:format>text/html</dc:format>
        <dc:date>2013-05-29T03:44:44+01:00</dc:date>
        <title>strawman:defensible_classes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:defensible_classes&amp;amp;rev=1369799084</link>
        <description> Const Classes  Const Traits    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:deferred&amp;amp;rev=1338221011">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-28T16:03:31+01:00</dc:date>
        <title>strawman:deferred</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:deferred&amp;amp;rev=1338221011</link>
        <description> These proposal are no longer being actively considered but could potentially be revived in the future:   let expressions  types  syntax for efficient traits (markm)  shallow continuations, a simple and general form for capturing a single function ac...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:deferred_functions&amp;amp;rev=1319918765">
        <dc:format>text/html</dc:format>
        <dc:date>2011-10-29T20:06:05+01:00</dc:date>
        <title>strawman:deferred_functions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:deferred_functions&amp;amp;rev=1319918765</link>
        <description> See async_functions for a revised version of this proposal implementable as a library in terms of concurrency and generators.  Deferred Functions   Deferred functions ease the burden of asynchronous programming.   Asynchronous Programming   Ecmascri...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:define_properties_operator&amp;amp;rev=1344439475">
        <dc:format>text/html</dc:format>
        <dc:date>2012-08-08T15:24:35+01:00</dc:date>
        <title>strawman:define_properties_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:define_properties_operator&amp;amp;rev=1344439475</link>
        <description> The ECMAScript meta-model for objects has distinct semantics for modifying and adding object properties. The [[Put]] semantics, associated with the = operator, is most commonly used when a programmer intends to update the value of a property but in ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:defineproperty_reject_behavior&amp;amp;rev=1322119482">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-24T07:24:42+01:00</dc:date>
        <title>strawman:defineproperty_reject_behavior</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:defineproperty_reject_behavior&amp;amp;rev=1322119482</link>
        <description> In the current Proxy API, the defineProperty trap cannot faithfully emulate the reject behavior of [[DefineOwnProperty]]. As WebIDL may make use of this reject behavior, proxies need to emulate it in order to faithfully wrap the DOM.  Proposal: have...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:derived_traps_forwarding_handler&amp;amp;rev=1323070638">
        <dc:format>text/html</dc:format>
        <dc:date>2011-12-05T07:37:18+01:00</dc:date>
        <title>strawman:derived_traps_forwarding_handler</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:derived_traps_forwarding_handler&amp;amp;rev=1323070638</link>
        <description> The default Proxy forwarding handler provides an implementation for all fundamental and all derived traps. For the derived traps, two possible default implementations are possible, and it is not entirely obvious which one is better.   Context   Davi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:dicts&amp;amp;rev=1300048027">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-13T20:27:07+01:00</dc:date>
        <title>strawman:dicts</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:dicts&amp;amp;rev=1300048027</link>
        <description> ECMAScript&amp;rsquo;s objects and functions have a number of special cases (both in the official spec and in unofficial extensions) that can become hazards in practical programming. For example, prototype inheritance as well as magic properties such as...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:direct_proxies&amp;amp;rev=1322046298">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-23T11:04:58+01:00</dc:date>
        <title>strawman:direct_proxies</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:direct_proxies&amp;amp;rev=1322046298</link>
        <description> Most parts of this strawman are now accepted as the new direct proxies API. The Proxy.stopTrapping part has been deferred. The Proxy.startTrapping (aka Proxy.attach) part remains a separate strawman.   Motivation   Direct Proxies resolve a number of...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:do_expressions&amp;amp;rev=1320990246">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-11T05:44:06+01:00</dc:date>
        <title>strawman:do_expressions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:do_expressions&amp;amp;rev=1320990246</link>
        <description> JS has too many statements! This proposal makes it easier to do all the flexible things you can do with statements while still producing a useful result and plugging that back into an expression context.  Compound expressions with side-effects are p...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:embracing_workers&amp;amp;rev=1379535166">
        <dc:format>text/html</dc:format>
        <dc:date>2013-09-18T20:12:46+01:00</dc:date>
        <title>strawman:embracing_workers</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:embracing_workers&amp;amp;rev=1379535166</link>
        <description> Moved to structured_clone   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:encapsulated_hashcodes&amp;amp;rev=1359676221">
        <dc:format>text/html</dc:format>
        <dc:date>2013-01-31T23:50:21+01:00</dc:date>
        <title>strawman:encapsulated_hashcodes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:encapsulated_hashcodes&amp;amp;rev=1359676221</link>
        <description> We made good progress toward an Object.hashcode(value) function at the March TC39 face-to-face meeting, based on ideas from hashcodes. Allen is going to revise this page to reflect the new consensus.   &amp;mdash; Brendan Eich 2010/04/28 20:12  ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:enumeration&amp;amp;rev=1300046981">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-13T20:09:41+01:00</dc:date>
        <title>strawman:enumeration</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:enumeration&amp;amp;rev=1300046981</link>
        <description> The semantics of enumeration in existing editions of ECMA-262 is very loosely specified. This strawman proposes more fully specifying the semantics of property enumeration.   Versioning   The semantics below is incompatible with existing web behavio...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:error_stack&amp;amp;rev=1343944519">
        <dc:format>text/html</dc:format>
        <dc:date>2012-08-02T21:55:19+01:00</dc:date>
        <title>strawman:error_stack</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:error_stack&amp;amp;rev=1343944519</link>
        <description> All major browsers (if beta versions are included) now support accessing stack traces from scripts. However, no single browser agree on the details of how stack traces are accessible.   Examples function f&amp;#40;&amp;#41; &amp;#123;  try &amp;#123;   doSomething&amp;...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:es5_internal_methods&amp;amp;rev=1299277249">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-04T22:20:49+01:00</dc:date>
        <title>strawman:es5_internal_methods</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:es5_internal_methods&amp;amp;rev=1299277249</link>
        <description> See:  ECMAScript 5.1 Implicit Internal Class Hierarchy of Native Object types  Usage of ECMASript 5.1 Object Internal Methods  ES5.1 Internal Method usage analysis  (Not yet complete)    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:es5_internal_nominal_typing&amp;amp;rev=1340145137">
        <dc:format>text/html</dc:format>
        <dc:date>2012-06-19T22:32:17+01:00</dc:date>
        <title>strawman:es5_internal_nominal_typing</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:es5_internal_nominal_typing&amp;amp;rev=1340145137</link>
        <description> See Nominal Object Typing in ES5 Specification  Specific things to do to cleanup/generalize spec. level use of nominal typing   Parameterized Objct.prototype.toString via actual object properties.  Cleanup [[Class]] tests in JSON.stringify. Perhaps ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator&amp;amp;rev=1340039977">
        <dc:format>text/html</dc:format>
        <dc:date>2012-06-18T17:19:37+01:00</dc:date>
        <title>strawman:existential_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator&amp;amp;rev=1340039977</link>
        <description> See the default operator proposal for a ?? binary connective with a ??= assignment operator form, useful for ensuring a variable has a default value instead of undefined.  This proposal augments the default operator by adding syntax to avoid accessi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:extended_object_api&amp;amp;rev=1280440363">
        <dc:format>text/html</dc:format>
        <dc:date>2010-07-29T21:52:43+01:00</dc:date>
        <title>strawman:extended_object_api</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:extended_object_api&amp;amp;rev=1280440363</link>
        <description> In addition to the extended object api proposal, ES-Harmony could standardize some useful but missing built-in methods on Object:  Object.getPropertyDescriptors&amp;#40;obj&amp;#41; -&amp;gt; pdmap Object.getOwnPropertyDescriptors&amp;#40;obj&amp;#41; -&amp;gt; pdmap The p...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:fix_function_name_binding&amp;amp;rev=1295499781">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-20T05:03:01+01:00</dc:date>
        <title>strawman:fix_function_name_binding</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:fix_function_name_binding&amp;amp;rev=1295499781</link>
        <description> &amp;mdash; Allen Wirfs-Brock 2011/01/19 15:48   Problem  Currently in ECMAScript, function objects created via a FunctionDeclaration can not reliably reference themselves by name. Function objects created via a FunctionExpression do not have this probl...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:fixed_properties&amp;amp;rev=1310554207">
        <dc:format>text/html</dc:format>
        <dc:date>2011-07-13T10:50:07+01:00</dc:date>
        <title>strawman:fixed_properties</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:fixed_properties&amp;amp;rev=1310554207</link>
        <description> Goal: allow proxies to emulate non-configurable properties, without breaking the invariants implied by configurable:false.  In what follows, a fixed property is a non-configurable property that is observed as the return value from the get{Own}Proper...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:fixing_override_mistake&amp;amp;rev=1326142332">
        <dc:format>text/html</dc:format>
        <dc:date>2012-01-09T20:52:12+01:00</dc:date>
        <title>strawman:fixing_override_mistake</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:fixing_override_mistake&amp;amp;rev=1326142332</link>
        <description> Currently, according to the ES5.1 spec, if object y inherits a non-writable data property &amp;ldquo;foo&amp;rdquo; from object x, then one cannot override &amp;ldquo;foo&amp;rdquo; on y simply by using assignment. In other words,   var x = Object.freeze&amp;#40;&amp;#123;...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:free-vars&amp;amp;rev=1262237580">
        <dc:format>text/html</dc:format>
        <dc:date>2009-12-31T05:33:00+01:00</dc:date>
        <title>strawman:free-vars</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:free-vars&amp;amp;rev=1262237580</link>
        <description> Draft Implementation Tests  Free Names and Labels  FN(P) is the set of free names ; names referred to but not defined within the production P. FL(P) is the set of free labels ; break or continue labels that do not jump to any node within P.  The fre...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:full_unicode_source_code&amp;amp;rev=1337813509">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-23T22:51:49+01:00</dc:date>
        <title>strawman:full_unicode_source_code</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:full_unicode_source_code&amp;amp;rev=1337813509</link>
        <description> Allen Wirfs-Brock  This page is complementary to Unicode supplementary characters. The Unicode escape sequences previously proposed here have been integrated into that proposal.  ECMAScript currently only directly supports the 16-bit basic multiling...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:function_proxy_prototype&amp;amp;rev=1301513925">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-30T19:38:45+01:00</dc:date>
        <title>strawman:function_proxy_prototype</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:function_proxy_prototype&amp;amp;rev=1301513925</link>
        <description> Programmers want to be able to create subtypes of the core built-in types like Array and Function. The binary data spec in particular wants callable Function subtypes.  This strawman proposes adding an optional fourth argument to Proxy.createFunctio...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:function_to_string&amp;amp;rev=1306647313">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-29T05:35:13+01:00</dc:date>
        <title>strawman:function_to_string</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:function_to_string&amp;amp;rev=1306647313</link>
        <description> For functions written in JavaScript, see the Harmony function_to_string proposal. This strawman discusses only the remaining problematic cases.   Problematic cases:   Built-in functions   As of this writing, most JS engines convert these to, for exa...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:gc_semantics&amp;amp;rev=1321139828">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-12T23:17:08+01:00</dc:date>
        <title>strawman:gc_semantics</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:gc_semantics&amp;amp;rev=1321139828</link>
        <description> In the absence of weak references, garbage collection decisions are not observable and so need not have a precise semantics. But programmers code to expectations of how garbage collectors work, and expect implementers to live up to these expectation...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:generator_expressions&amp;amp;rev=1303946845">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-27T23:27:25+01:00</dc:date>
        <title>strawman:generator_expressions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:generator_expressions&amp;amp;rev=1303946845</link>
        <description> See generator expressions.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:generators&amp;amp;rev=1303946764">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-27T23:26:04+01:00</dc:date>
        <title>strawman:generators</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:generators&amp;amp;rev=1303946764</link>
        <description> See generators.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:globalization-integration&amp;amp;rev=1326769836">
        <dc:format>text/html</dc:format>
        <dc:date>2012-01-17T03:10:36+01:00</dc:date>
        <title>strawman:globalization-integration</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:globalization-integration&amp;amp;rev=1326769836</link>
        <description> The proposal made on this page has been integrated into the ECMAScript Globalization API Specification, draft 2011-12-01, clause 13 &amp;ldquo;Locale Sensitive Functions of the ECMAScript Language Specification&amp;rdquo;.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:guards&amp;amp;rev=1306360745">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-25T21:59:05+01:00</dc:date>
        <title>strawman:guards</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:guards&amp;amp;rev=1306360745</link>
        <description> Guards are used as a convenient syntax for enforcing user-defined invariants. They can be used as types, but can also enforce arbitrary constraints. Use guards to annotate variable and parameter declarations, function return results, and property de...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:handler_access_to_proxy&amp;amp;rev=1301515043">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-30T19:57:23+01:00</dc:date>
        <title>strawman:handler_access_to_proxy</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:handler_access_to_proxy&amp;amp;rev=1301515043</link>
        <description> We should consider the possibility of extending the Proxy Handler API such that handlers get access to the proxy for which they are currently intercepting. Motivating use cases:  A handler shared by many proxy instances may want to identify the prox...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:has_operator&amp;amp;rev=1298929579">
        <dc:format>text/html</dc:format>
        <dc:date>2011-02-28T21:46:19+01:00</dc:date>
        <title>strawman:has_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:has_operator&amp;amp;rev=1298929579</link>
        <description> In ES3, the hasOwnProperty method is used to determine if a name refers to an own property of an object. This is not only awkward, but it can fail in a surprising way when the name being considered is &amp;ldquo;hasOwnProperty&amp;rdquo;. The workaround is ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:i18n_api&amp;amp;rev=1320192811">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-02T00:13:31+01:00</dc:date>
        <title>strawman:i18n_api</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:i18n_api&amp;amp;rev=1320192811</link>
        <description> This API is now tracked in the Globalization namespace. Specifications are on the Specification Drafts page.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:identifier_identification&amp;amp;rev=1381368576">
        <dc:format>text/html</dc:format>
        <dc:date>2013-10-10T01:29:36+01:00</dc:date>
        <title>strawman:identifier_identification</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:identifier_identification&amp;amp;rev=1381368576</link>
        <description> ECMAScript is used to implement a variety of tools that check code for conformance with the ECMAScript specification, minimize it, perform other transformations, or generate ECMAScript code. These tools have to be able to check identifiers for confo...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:inherited_explicit_soft_fields&amp;amp;rev=1306350412">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-25T19:06:52+01:00</dc:date>
        <title>strawman:inherited_explicit_soft_fields</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:inherited_explicit_soft_fields&amp;amp;rev=1306350412</link>
        <description> The following derived abstraction combines the explicitness of explicit soft own fields with the visibility across inheritance chains of inherited soft fields. Below is an executable specification as a wrapper around weak maps. This strawman page su...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:instance_variables&amp;amp;rev=1300668947">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-21T00:55:47+01:00</dc:date>
        <title>strawman:instance_variables</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:instance_variables&amp;amp;rev=1300668947</link>
        <description> In some situations it is desirable to strictly limit access to per object state such that they are totally unaccessable to unknown or untrusted code. Instance Variables provide this capability. An instance variable is a similar to a property in that...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:iterator_conveniences&amp;amp;rev=1309204923">
        <dc:format>text/html</dc:format>
        <dc:date>2011-06-27T20:02:03+01:00</dc:date>
        <title>strawman:iterator_conveniences</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:iterator_conveniences&amp;amp;rev=1309204923</link>
        <description> This proposal complements the iterators strawman with an API of conveniences for constructing iterators.   Library Iterator.create: function&amp;#40;trap: function&amp;#40;&amp;#41; -&amp;gt; iterator&amp;#41; -&amp;gt; iterator Iterator.for:  function&amp;#40;x: Object, trap:...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:iterators&amp;amp;rev=1303946791">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-27T23:26:31+01:00</dc:date>
        <title>strawman:iterators</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:iterators&amp;amp;rev=1303946791</link>
        <description> See iterators.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:json_path&amp;amp;rev=1292515470">
        <dc:format>text/html</dc:format>
        <dc:date>2010-12-16T16:04:30+01:00</dc:date>
        <title>strawman:json_path</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:json_path&amp;amp;rev=1292515470</link>
        <description> JSONpath is an XPath-like language for extracting information from data structures. See http://goessner.net/articles/JsonPath/ and http://code.google.com/p/jsonpath/.  It is proposed that a path property be added to the JSON object, whose value is a...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:lambdas&amp;amp;rev=1228443749">
        <dc:format>text/html</dc:format>
        <dc:date>2008-12-05T02:22:29+01:00</dc:date>
        <title>strawman:lambdas</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:lambdas&amp;amp;rev=1228443749</link>
        <description> Why:   A simpler primitive underlying the language&amp;rsquo;s first-class functions.  Supports defining other features via desugaring without breaking equivalence with implicit features (arguments, this, return) &amp;mdash; this is sometimes described as T...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:let_expressions&amp;amp;rev=1274489843">
        <dc:format>text/html</dc:format>
        <dc:date>2010-05-22T00:57:23+01:00</dc:date>
        <title>strawman:let_expressions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:let_expressions&amp;amp;rev=1274489843</link>
        <description> It&amp;rsquo;s currently hard to create compound expressions that do anything non-trivial. And it would be useful to be able to bind local variables and execute statements in an unobtrusive way, without introducing refactoring hazards like capturing the...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:lexical_scope&amp;amp;rev=1223610047">
        <dc:format>text/html</dc:format>
        <dc:date>2008-10-10T03:40:47+01:00</dc:date>
        <title>strawman:lexical_scope</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:lexical_scope&amp;amp;rev=1223610047</link>
        <description> Lexical scope is an important principle in programming: it provides better abstraction and makes programs less brittle for refactoring. It also enables faster implementations since compilers and interpreters can resolve variable references early, pr...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:magic_proto_property&amp;amp;rev=1329596791">
        <dc:format>text/html</dc:format>
        <dc:date>2012-02-18T20:26:31+01:00</dc:date>
        <title>strawman:magic_proto_property</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:magic_proto_property&amp;amp;rev=1329596791</link>
        <description> The draft of the specification for this feature for incorporation into the ES6 working draft is here: draft_proto_spec_rev2.pdf   Background   See Why we need to clean up __proto__ for the motivation.  Proposed Requirements:  That __proto__ be speci...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:match_web_reality&amp;amp;rev=1306223695">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-24T07:54:55+01:00</dc:date>
        <title>strawman:match_web_reality</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:match_web_reality&amp;amp;rev=1306223695</link>
        <description> The regular expressions that web browsers interoperability implement is not what is defined in the current ES5 specification.  For Harmony, the spec. should be updated to match reality.  Lasse Reichstein posted ti esdiscuss the following summary of ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:match_web_reality_spec&amp;amp;rev=1306224346">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-24T08:05:46+01:00</dc:date>
        <title>strawman:match_web_reality_spec</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:match_web_reality_spec&amp;amp;rev=1306224346</link>
        <description> The spec below aims to capture the following cases which are syntax errors according to ES5, but are broadly supported and relied upon on the web.   exec(/\12/, &amp;quot;\n&amp;quot;); exec(/[\12]/, &amp;quot;\n&amp;quot;); exec(/\xg/, &amp;quot;xg&amp;quot;); exec(/[\xg]...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:maximally_minimal_classes&amp;amp;rev=1373587115">
        <dc:format>text/html</dc:format>
        <dc:date>2013-07-11T23:58:35+01:00</dc:date>
        <title>strawman:maximally_minimal_classes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:maximally_minimal_classes&amp;amp;rev=1373587115</link>
        <description> This proposal has progressed to the Draft ECMAScript 6 Specification, which is available for review here: specification_drafts. Any new issues relating to them should be filed as bugs at http://bugs.ecmascript.org. The content on this page is for hi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:minimal_classes&amp;amp;rev=1320989373">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-11T05:29:33+01:00</dc:date>
        <title>strawman:minimal_classes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:minimal_classes&amp;amp;rev=1320989373</link>
        <description> This proposal is a simplification of classes. It focuses on providing convenient syntax for the most common class patterns of constructors and prototypes: a constructor with a declarative set of shared prototype methods, and built-in syntax for acce...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:minimal_classes_as_constructors&amp;amp;rev=1337631193">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-21T20:13:13+01:00</dc:date>
        <title>strawman:minimal_classes_as_constructors</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:minimal_classes_as_constructors&amp;amp;rev=1337631193</link>
        <description> This proposal is an alternative approach to minimal classes based on a classes as constructors syntactic approach, which aims to offer better toolability and in many cases simpler expression of class structure.  The two leading samples presented her...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:module_loaders&amp;amp;rev=1300917425">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-23T21:57:05+01:00</dc:date>
        <title>strawman:module_loaders</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:module_loaders&amp;amp;rev=1300917425</link>
        <description> This spec has been promoted to module loaders.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:modules&amp;amp;rev=1259883480">
        <dc:format>text/html</dc:format>
        <dc:date>2009-12-03T23:38:00+01:00</dc:date>
        <title>strawman:modules</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:modules&amp;amp;rev=1259883480</link>
        <description> The following strawman proposal is in development, for its second draft phase. For previous drafts, please view the documents presented to TC39 in January of 2009 and the ratified proposal for the CommonJS working group.  http://docs.google.com/Doc?...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:modules_emaker_style&amp;amp;rev=1264569372">
        <dc:format>text/html</dc:format>
        <dc:date>2010-01-27T05:16:12+01:00</dc:date>
        <title>strawman:modules_emaker_style</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:modules_emaker_style&amp;amp;rev=1264569372</link>
        <description> This proposal describes a candidate semantics for modular code in ECMAScript. This candidate is built using lambda abstraction and lexical scoping to achieve, depending on the reader&amp;rsquo;s perspective:   The software engineering benefits of strict...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:modules_harmonic&amp;amp;rev=1274206362">
        <dc:format>text/html</dc:format>
        <dc:date>2010-05-18T18:12:42+01:00</dc:date>
        <title>strawman:modules_harmonic</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:modules_harmonic&amp;amp;rev=1274206362</link>
        <description> This is a proposal for modular programming support in ECMAScript, and is presented as two levels satisfying distinct programming styles.   The dependency injection level provides purely injected dependencies and strict isolation between components. ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:modules_packages&amp;amp;rev=1264552060">
        <dc:format>text/html</dc:format>
        <dc:date>2010-01-27T00:27:40+01:00</dc:date>
        <title>strawman:modules_packages</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:modules_packages&amp;amp;rev=1264552060</link>
        <description> This proposal describes a manner of packaging and referring to ECMAScript code. It is intended to satisfy the Uniform location and retrieval goal of modules_emaker_style.  The goals of this proposal are similar to what OSGi tries to do for Java. How...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:modules_primordials&amp;amp;rev=1269046767">
        <dc:format>text/html</dc:format>
        <dc:date>2010-03-20T00:59:27+01:00</dc:date>
        <title>strawman:modules_primordials</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:modules_primordials&amp;amp;rev=1269046767</link>
        <description> This proposal specifies primitives that would enable a variety of module systems to be implemented in ECMAScript. These primitives permit new contexts to be created, for modules to be compiled, analyzed for dependencies at compile-time, and for modu...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:modulo_operator&amp;amp;rev=1300911395">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-23T20:16:35+01:00</dc:date>
        <title>strawman:modulo_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:modulo_operator&amp;amp;rev=1300911395</link>
        <description> ECMAScript does not currently have a modulo operator. Instead, it has a remainder operator %. The result of remainder takes the sign of the dividend, not the divisor, so it does not have the nice limit-and-force-to-the-positive characteristics of mo...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:multiline_regexps&amp;amp;rev=1309535735">
        <dc:format>text/html</dc:format>
        <dc:date>2011-07-01T15:55:35+01:00</dc:date>
        <title>strawman:multiline_regexps</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:multiline_regexps&amp;amp;rev=1309535735</link>
        <description> Superseded by quasis.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:multiple_globals&amp;amp;rev=1306797569">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-30T23:19:29+01:00</dc:date>
        <title>strawman:multiple_globals</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:multiple_globals&amp;amp;rev=1306797569</link>
        <description> See multiple_globals   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:name_property_of_functions&amp;amp;rev=1373587096">
        <dc:format>text/html</dc:format>
        <dc:date>2013-07-11T23:58:16+01:00</dc:date>
        <title>strawman:name_property_of_functions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:name_property_of_functions&amp;amp;rev=1373587096</link>
        <description> This proposal has progressed to the Draft ECMAScript 6 Specification, which is available for review here: specification_drafts. Any new issues relating to them should be filed as bugs at http://bugs.ecmascript.org. The content on this page is for hi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:names&amp;amp;rev=1293058507">
        <dc:format>text/html</dc:format>
        <dc:date>2010-12-22T22:55:07+01:00</dc:date>
        <title>strawman:names</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:names&amp;amp;rev=1293058507</link>
        <description> NOTE: This proposal has been superseded by the private_names proposal.   Overview   In existing ECMAScript, it is not possible to create hidden properties. It is possible to create non-enumerable properties, but they can still be discovered by guess...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:names_vs_soft_fields&amp;amp;rev=1299184641">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-03T20:37:21+01:00</dc:date>
        <title>strawman:names_vs_soft_fields</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:names_vs_soft_fields&amp;amp;rev=1299184641</link>
        <description> To better understand the differences between soft fields and private names, this page goes through all the examples from the latter (as of this writing) and explores how they&amp;rsquo;d look as translated to use soft fields instead. This translation do...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:narrowing_chapter_16&amp;amp;rev=1325016984">
        <dc:format>text/html</dc:format>
        <dc:date>2011-12-27T20:16:24+01:00</dc:date>
        <title>strawman:narrowing_chapter_16</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:narrowing_chapter_16&amp;amp;rev=1325016984</link>
        <description> To be written   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:number_compare&amp;amp;rev=1297901569">
        <dc:format>text/html</dc:format>
        <dc:date>2011-02-17T00:12:49+01:00</dc:date>
        <title>strawman:number_compare</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:number_compare&amp;amp;rev=1297901569</link>
        <description> It is proposed that a compare function be added to Number.prototype. It can take three arguments. The first two arguments are number values to be compared. The third argument is the tolerance. If the third argument is falsy, then 0 is assumed.  It c...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:number_epsilon&amp;amp;rev=1338052672">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-26T17:17:52+01:00</dc:date>
        <title>strawman:number_epsilon</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:number_epsilon&amp;amp;rev=1338052672</link>
        <description> See accepted Harmony proposal number EPSILON    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:number_isfinite&amp;amp;rev=1303949998">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-28T00:19:58+01:00</dc:date>
        <title>strawman:number_isfinite</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:number_isfinite&amp;amp;rev=1303949998</link>
        <description> See Number.isFinite.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:number_isinteger&amp;amp;rev=1303951637">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-28T00:47:17+01:00</dc:date>
        <title>strawman:number_isinteger</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:number_isinteger&amp;amp;rev=1303951637</link>
        <description> See Number.isInteger.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:number_isnan&amp;amp;rev=1303950203">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-28T00:23:23+01:00</dc:date>
        <title>strawman:number_isnan</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:number_isnan&amp;amp;rev=1303950203</link>
        <description> See Number.isNaN.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:number_max_integer&amp;amp;rev=1338052816">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-26T17:20:16+01:00</dc:date>
        <title>strawman:number_max_integer</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:number_max_integer&amp;amp;rev=1338052816</link>
        <description> See accepted Harmony proposal number MAX_INTEGER   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_class_abstraction&amp;amp;rev=1300572069">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-19T22:01:09+01:00</dc:date>
        <title>strawman:obj_initialiser_class_abstraction</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_class_abstraction&amp;amp;rev=1300572069</link>
        <description> This is a revised proposal that is based upon discussions at the Sept. 2010 TC39 meeting.   This is one of several related Object Initialiser Extensions.  This extension builds upon concepts introduced in Object Initialiser Meta Properties, Object I...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_const&amp;amp;rev=1300891282">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-23T14:41:22+01:00</dc:date>
        <title>strawman:obj_initialiser_const</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_const&amp;amp;rev=1300891282</link>
        <description> This is one of several related Object Initialiser Extensions. This extension builds upon concepts introduced in Object Initialiser Meta Properties and Method Properties.  Given the proposed Meta properties and method properties object literal extens...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_constructors&amp;amp;rev=1299089245">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-02T18:07:25+01:00</dc:date>
        <title>strawman:obj_initialiser_constructors</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_constructors&amp;amp;rev=1299089245</link>
        <description> This is one of several related Object Initialiser Extensions.   Enhance object initialisers provide a self contained declarative construct for defining discrete objects. Such declarations define abstractions that usually need to be named. One way to...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_meta&amp;amp;rev=1300479470">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-18T20:17:50+01:00</dc:date>
        <title>strawman:obj_initialiser_meta</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_meta&amp;amp;rev=1300479470</link>
        <description> This is one of several related Object Initialiser Extensions.  Updated to use angle brackets, add array form, replaced parent meta property with proto, elimianted extensible meta property &amp;mdash; Allen Wirfs-Brock 2010/09/08 04:20  Updated to use cl...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_methods&amp;amp;rev=1300808362">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-22T15:39:22+01:00</dc:date>
        <title>strawman:obj_initialiser_methods</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_methods&amp;amp;rev=1300808362</link>
        <description> This is one of several related Object Initialiser Extensions.   Using ES5 object literal syntax one can define properties whose values are functions and which serve as methods. However, properties defined in this manner are enumerable and making a p...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_private&amp;amp;rev=1299087081">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-02T17:31:21+01:00</dc:date>
        <title>strawman:obj_initialiser_private</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:obj_initialiser_private&amp;amp;rev=1299087081</link>
        <description> This is one of several related Object Initialiser Extensions.  The original proposal below is an approach for extending object initializes to include private state declarations. However, the private_names proposal suggests an even simpler approach. ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:object_extension_literals&amp;amp;rev=1338241245">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-28T21:40:45+01:00</dc:date>
        <title>strawman:object_extension_literals</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:object_extension_literals&amp;amp;rev=1338241245</link>
        <description> An Object Extension Literal uses ObjectLiteral-like syntax to define or modify a set of properties of a preexisting object. The ObjectLiteral-like syntax is treated as an Object Extension Literal when it appears immediately to the right of the . in ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_extensions&amp;amp;rev=1305928579">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-20T21:56:19+01:00</dc:date>
        <title>strawman:object_initialiser_extensions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_extensions&amp;amp;rev=1305928579</link>
        <description> This proposal has been supercede by Intergrated Object Literal Extensions.  Allen Wirfs-Brock Original Proposal August 10, 2009  Revised Proposal March 2011  Abstraction creation is a central theme of object-based programming and ECMAScript provides...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_initialization_blocks&amp;amp;rev=1300563896">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-19T19:44:56+01:00</dc:date>
        <title>strawman:object_initialiser_initialization_blocks</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_initialization_blocks&amp;amp;rev=1300563896</link>
        <description> This is one of several related Object Initialiser Extensions.   Occasionally when instantiating an object it is necessary to perform imperative initialization actions other than simply initializing property values. For example:  function monitoredOb...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_shorthand&amp;amp;rev=1318272944">
        <dc:format>text/html</dc:format>
        <dc:date>2011-10-10T18:55:44+01:00</dc:date>
        <title>strawman:object_initialiser_shorthand</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_shorthand&amp;amp;rev=1318272944</link>
        <description> Without switching to a different and more powerful specification parser, e.g. GLR, the destructuring shorthand already accepted requires that &amp;ldquo;right-hand side expressions&amp;rdquo; contexts support this structuring shorthand. The same PrimaryExpr...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_super&amp;amp;rev=1305920729">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-20T19:45:29+01:00</dc:date>
        <title>strawman:object_initialiser_super</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:object_initialiser_super&amp;amp;rev=1305920729</link>
        <description> In object-oriented programming languages, inheritance is used to perform behavioral composition. An object combines together the properties it inherits from its prototypes with new and replacement properties define for the specific object. Occasiona...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:object_isobject&amp;amp;rev=1303948810">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-28T00:00:10+01:00</dc:date>
        <title>strawman:object_isobject</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:object_isobject&amp;amp;rev=1303948810</link>
        <description> See typeof null.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:object_model_reformation&amp;amp;rev=1334794935">
        <dc:format>text/html</dc:format>
        <dc:date>2012-04-19T00:22:15+01:00</dc:date>
        <title>strawman:object_model_reformation</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:object_model_reformation&amp;amp;rev=1334794935</link>
        <description> Summary: The typical usage of object properties to define dynamic data collections in ECMAScript conflates concepts from the application data domain (the data manipulated by the program) and the program definition domain (the actual program text) in...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:observe&amp;amp;rev=1348241195">
        <dc:format>text/html</dc:format>
        <dc:date>2012-09-21T15:26:35+01:00</dc:date>
        <title>strawman:observe</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:observe&amp;amp;rev=1348241195</link>
        <description> Accepted, see Harmony proposal: observe   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:oldes6&amp;amp;rev=1373301616">
        <dc:format>text/html</dc:format>
        <dc:date>2013-07-08T16:40:16+01:00</dc:date>
        <title>strawman:oldes6</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:oldes6&amp;amp;rev=1373301616</link>
        <description> This is the &amp;lsquo;strawman&amp;rsquo; page from ES6. Most of this stuff didn&amp;rsquo;t make it into ES6.   Proposals  Concurrency, Asynchrony, and Distributed Programming  concurrency (markm)  deferred functions allow writing asynchronous code in a linea...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:operator_overloading_with_double_dispatch&amp;amp;rev=1332901921">
        <dc:format>text/html</dc:format>
        <dc:date>2012-03-28T02:32:01+01:00</dc:date>
        <title>strawman:operator_overloading_with_double_dispatch</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:operator_overloading_with_double_dispatch&amp;amp;rev=1332901921</link>
        <description> value types discuss requires for adding to ECMAScript additional value types that overload the existing operators. value objects proposed a fixed set of immutable value types proposes incorporating the operator overload semantics for this set direct...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:parameters_property_of_functions&amp;amp;rev=1295457993">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-19T17:26:33+01:00</dc:date>
        <title>strawman:parameters_property_of_functions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:parameters_property_of_functions&amp;amp;rev=1295457993</link>
        <description> This is a companion to name property of functions.  Function instances will have a non-writeable, non-configurable parameters property whose value is a frozen array of strings, the strings being the names of the function&amp;rsquo;s parameters.  This fu...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:paren_free&amp;amp;rev=1307308065">
        <dc:format>text/html</dc:format>
        <dc:date>2011-06-05T21:07:45+01:00</dc:date>
        <title>strawman:paren_free</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:paren_free&amp;amp;rev=1307308065</link>
        <description> Syntax matters, keystrokes count. Both readability and writability can be impaired by too much punctuation and unnecessary bracketing. Some languages even prefer indentation-based block structure to bracing, and their fans report read and write (inc...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:pattern_matching&amp;amp;rev=1298937489">
        <dc:format>text/html</dc:format>
        <dc:date>2011-02-28T23:58:09+01:00</dc:date>
        <title>strawman:pattern_matching</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:pattern_matching&amp;amp;rev=1298937489</link>
        <description> JS 1.7 destructuring is almost pattern matching, but it lacks the refutable semantics needed to support a conditional pattern matching form. This strawman adds a notion of refutable matching and adds certain contexts to the language where matching i...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:pragmas&amp;amp;rev=1306266163">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-24T19:42:43+01:00</dc:date>
        <title>strawman:pragmas</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:pragmas&amp;amp;rev=1306266163</link>
        <description> Promoted to pragmas.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:private_name_objects&amp;amp;rev=1306275478">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-24T22:17:58+01:00</dc:date>
        <title>strawman:private_name_objects</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:private_name_objects&amp;amp;rev=1306275478</link>
        <description> Promoted to private name objects.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:private_names&amp;amp;rev=1305683355">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-18T01:49:15+01:00</dc:date>
        <title>strawman:private_names</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:private_names&amp;amp;rev=1305683355</link>
        <description> Updated &amp;mdash; Allen Wirfs-Brock 2011/03/10 00:39 2010/12/08 15:16  Revised proposal by Allen Wirfs-Brock Original proposal by Dave Herman and Sam Tobin-Hochstadt is here.  In existing ECMAScript, property names are just strings. It is not possible...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:private_names_in_object_initialisers&amp;amp;rev=1300813524">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-22T17:05:24+01:00</dc:date>
        <title>strawman:private_names_in_object_initialisers</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:private_names_in_object_initialisers&amp;amp;rev=1300813524</link>
        <description> This is one of several related Object Initialiser Extensions.  This extension builds upon concepts introduced in Object Initialiser Meta Properties, Method Properties, Other Object Initialiser Property Modifiers, and Class Initialisers  Private Name...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:promises&amp;amp;rev=1370804222">
        <dc:format>text/html</dc:format>
        <dc:date>2013-06-09T18:57:02+01:00</dc:date>
        <title>strawman:promises</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:promises&amp;amp;rev=1370804222</link>
        <description> PromiseResolver objects are made only by the Promise constructor below. They are always paired with a fresh pending promise and control how that promise resolves.   Properties of PromiseResolver Instances   fulfill(value)   If the promise to be reso...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proper_tail_calls&amp;amp;rev=1295658735">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-22T01:12:15+01:00</dc:date>
        <title>strawman:proper_tail_calls</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proper_tail_calls&amp;amp;rev=1295658735</link>
        <description> See proper tail calls.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proto_operator&amp;amp;rev=1308283043">
        <dc:format>text/html</dc:format>
        <dc:date>2011-06-17T03:57:23+01:00</dc:date>
        <title>strawman:proto_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proto_operator&amp;amp;rev=1308283043</link>
        <description> See set_literal_prototype_operator.  ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proxies&amp;amp;rev=1265075824">
        <dc:format>text/html</dc:format>
        <dc:date>2010-02-02T01:57:04+01:00</dc:date>
        <title>strawman:proxies</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proxies&amp;amp;rev=1265075824</link>
        <description> See the proxies proposal.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proxies_names&amp;amp;rev=1358283739">
        <dc:format>text/html</dc:format>
        <dc:date>2013-01-15T21:02:19+01:00</dc:date>
        <title>strawman:proxies_names</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proxies_names&amp;amp;rev=1358283739</link>
        <description> This is a placeholder page to record the ongoing discussion on the interaction between direct_proxies and private_name_objects.  The basic issue is that a proxy can&amp;rsquo;t just intercept operations involving private names naively, since that would ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proxies_semantics&amp;amp;rev=1265076159">
        <dc:format>text/html</dc:format>
        <dc:date>2010-02-02T02:02:39+01:00</dc:date>
        <title>strawman:proxies_semantics</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proxies_semantics&amp;amp;rev=1265076159</link>
        <description> See the proxies_semantics proposal.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_defaulthandler&amp;amp;rev=1295894740">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-24T18:45:40+01:00</dc:date>
        <title>strawman:proxy_defaulthandler</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proxy_defaulthandler&amp;amp;rev=1295894740</link>
        <description> Moved to proposals.    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_derived_traps&amp;amp;rev=1301999129">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-05T10:25:29+01:00</dc:date>
        <title>strawman:proxy_derived_traps</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proxy_derived_traps&amp;amp;rev=1301999129</link>
        <description> David Bruant noted that the getPropertyDescriptor and getPropertyNames traps can become derived. They are currently specced as fundamental traps.  Since fundamental traps are required and derived traps are optional, and since derived traps add no ne...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_drop_receiver&amp;amp;rev=1304492515">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-04T07:01:55+01:00</dc:date>
        <title>strawman:proxy_drop_receiver</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proxy_drop_receiver&amp;amp;rev=1304492515</link>
        <description> As noted by Sean Eagan on es-discuss, the receiver parameter to the get and set traps of Proxy handlers is not strictly necessary.  The purpose of this parameter was to allow proxy handlers to refer to the original receiver of a property access/assi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_instanceof&amp;amp;rev=1292403960">
        <dc:format>text/html</dc:format>
        <dc:date>2010-12-15T09:06:00+01:00</dc:date>
        <title>strawman:proxy_instanceof</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proxy_instanceof&amp;amp;rev=1292403960</link>
        <description> Andreas Gal discovered that in order to wrap the DOM faithfully, proxies need to trap instanceof. Apparently, the DOM implements some kind of multiple inheritance relationship that can only be emulated by trapping instanceof. (the issue has to do wi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_set_trap&amp;amp;rev=1304494284">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-04T07:31:24+01:00</dc:date>
        <title>strawman:proxy_set_trap</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proxy_set_trap&amp;amp;rev=1304494284</link>
        <description> The default implementation of the derived set trap of Proxies was written to be consistent with the ES5 [[Put]] algorithm (ES5 section 8.12.5). As noted by David Bruant, the accessor case for own properties should only be considered after the call t...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:proxy_symbol_decoupled&amp;amp;rev=1360005899">
        <dc:format>text/html</dc:format>
        <dc:date>2013-02-04T19:24:59+01:00</dc:date>
        <title>strawman:proxy_symbol_decoupled</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:proxy_symbol_decoupled&amp;amp;rev=1360005899</link>
        <description> Problem: the interaction between proxies and private symbols,   A) is awkward/complicated (the unknownPrivateSymbol trap and extra whitelist argument to the Proxy constructor)  B) diminishes the value of private symbols as a reliable means to store ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-alt&amp;amp;rev=1263230240">
        <dc:format>text/html</dc:format>
        <dc:date>2010-01-11T17:17:20+01:00</dc:date>
        <title>strawman:quasis-alt</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-alt&amp;amp;rev=1263230240</link>
        <description> Draft Implementation Tests Interactive Testbed  This is an alternative to quasis and only the changed sections are included here.  EcmaScript Quasi-Literal Strawman   Motivation   Extend EcmaScript syntax to allow experimentation with quasi-literals...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-desugaring-cachekey&amp;amp;rev=1306359989">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-25T21:46:29+01:00</dc:date>
        <title>strawman:quasis-desugaring-cachekey</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-desugaring-cachekey&amp;amp;rev=1306359989</link>
        <description> Given the QT, LPA, and SVE computed from the various options in quasis, this specifies the desugaring of the QuasiLiteral production.  This proposal uses stores the LPA which never changes from invocation to invocation of the quasiliteral in a froze...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-desugaring-curried&amp;amp;rev=1301349993">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-28T22:06:33+01:00</dc:date>
        <title>strawman:quasis-desugaring-curried</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-desugaring-curried&amp;amp;rev=1301349993</link>
        <description> Given the QT, LPA, and SVE computed from the various options in quasis, this specifies the desugaring of the QuasiLiteral production.  This proposal uses two calls, one with the literal portions, and another with the substitution values.   Desugarin...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-desugaring-uncurried&amp;amp;rev=1300925278">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-24T00:07:58+01:00</dc:date>
        <title>strawman:quasis-desugaring-uncurried</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-desugaring-uncurried&amp;amp;rev=1300925278</link>
        <description> Given the QT, LPA, and SVE computed from the various options in quasis-smorgasboard, this specifies the desugaring of the QuasiLiteral production.  This version passes all the parts to the function specified by the quasi tag in one argument list ins...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-literalportion-simple&amp;amp;rev=1300916295">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-23T21:38:15+01:00</dc:date>
        <title>strawman:quasis-literalportion-simple</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-literalportion-simple&amp;amp;rev=1300916295</link>
        <description> This is one of a number of options for defining the grammar of quasis-smorgasboard. It explains how the boundaries between literal portions and substitutions are determined.   QuasiLiteral ::  QuasiTag [no LineTerminator here] ` LiteralPortion Quasi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-quasitag-memberexpr&amp;amp;rev=1301349968">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-28T22:06:08+01:00</dc:date>
        <title>strawman:quasis-quasitag-memberexpr</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-quasitag-memberexpr&amp;amp;rev=1301349968</link>
        <description> This extends quasis-quasitag-simple to allow richer QuasiTypeTags for use with quasis. Specifically, it allows quasi handlers to be name-spaced using ES5 idioms (my.namespace.foo`foo${bar}baz`) and it allows quasi handlers defined inside a loaded mo...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-quasitag-simple&amp;amp;rev=1300916973">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-23T21:49:33+01:00</dc:date>
        <title>strawman:quasis-quasitag-simple</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-quasitag-simple&amp;amp;rev=1300916973</link>
        <description> This defines a very simple syntax and semantics for the QuasiTypeTag production used by quasis-smorgasboard.   Quasi Type Tag ::  Identifier   QT    Production Result    Identifier an expression of the form PrimaryExpression : Identifer with the giv...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-primaryexpr&amp;amp;rev=1307206480">
        <dc:format>text/html</dc:format>
        <dc:date>2011-06-04T16:54:40+01:00</dc:date>
        <title>strawman:quasis-substitutions-primaryexpr</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-primaryexpr&amp;amp;rev=1307206480</link>
        <description> This defines the substitution body of a quasi using the PrimaryExpression syntactic production. Determining where a substitution ends requires, in the general case, the ability to parse an EcmaScript expression. See a lexer demo that demonstrates ho...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-simple-members&amp;amp;rev=1301350053">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-28T22:07:33+01:00</dc:date>
        <title>strawman:quasis-substitutions-simple-members</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-simple-members&amp;amp;rev=1301350053</link>
        <description> This defines the substitution body of a quasi allowing a large subset of MemberExpressions in a way that allows easy bounding of the quasi by a lexical scanner. Determining where a substitution ends does not require the ability to parse an EcmaScrip...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-slot&amp;amp;rev=1308276446">
        <dc:format>text/html</dc:format>
        <dc:date>2011-06-17T02:07:26+01:00</dc:date>
        <title>strawman:quasis-substitutions-slot</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-slot&amp;amp;rev=1308276446</link>
        <description> This defines the substitution body of a quasi using the PrimaryExpression syntactic production and turns the resulting expression into a slot that is settable or readable so that quasi handlers can conditionally &amp;amp; multiple evaluate substitution ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-thunk&amp;amp;rev=1301350003">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-28T22:06:43+01:00</dc:date>
        <title>strawman:quasis-substitutions-thunk</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis-substitutions-thunk&amp;amp;rev=1301350003</link>
        <description> This defines the substitution body of a quasi using the PrimaryExpression syntactic production and thunks the resulting expression so that quasi handlers can conditionally &amp;amp; multiple evaluate substitution bodies. Determining where a substitution...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:quasis&amp;amp;rev=1306794675">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-30T22:31:15+01:00</dc:date>
        <title>strawman:quasis</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:quasis&amp;amp;rev=1306794675</link>
        <description> See quasis   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:random-er&amp;amp;rev=1307649782">
        <dc:format>text/html</dc:format>
        <dc:date>2011-06-09T20:03:02+01:00</dc:date>
        <title>strawman:random-er</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:random-er&amp;amp;rev=1307649782</link>
        <description> Adopt Adam Barth's proposal as a source of cryptographically strong random numbers, but with an API based on binary_data, and made available (somehow) via the module system rather than introducing yet another property on the global object. This comm...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:records&amp;amp;rev=1301790690">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-03T00:31:30+01:00</dc:date>
        <title>strawman:records</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:records&amp;amp;rev=1301790690</link>
        <description> Concise syntax for prototype-less, immutable data structures with named properties.   Syntax  RecordLiteral ::= &amp;quot;#&amp;quot; &amp;quot;{&amp;quot; (&amp;quot;...&amp;quot; AssignmentExpression)? &amp;quot;}&amp;quot;        | &amp;quot;#&amp;quot; &amp;quot;{&amp;quot; PropertyDataAssign...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:refactoring_put&amp;amp;rev=1322040395">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-23T09:26:35+01:00</dc:date>
        <title>strawman:refactoring_put</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:refactoring_put&amp;amp;rev=1322040395</link>
        <description> This strawman is now a proposal.    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:regexp_look-behind_support&amp;amp;rev=1332260334">
        <dc:format>text/html</dc:format>
        <dc:date>2012-03-20T16:18:54+01:00</dc:date>
        <title>strawman:regexp_look-behind_support</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:regexp_look-behind_support&amp;amp;rev=1332260334</link>
        <description> promoted regexp look-behind support    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:regexp_x_flag&amp;amp;rev=1294077331">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-03T17:55:31+01:00</dc:date>
        <title>strawman:regexp_x_flag</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:regexp_x_flag&amp;amp;rev=1294077331</link>
        <description> Add x to the set of flags gim. The x flag causes line endings and unescaped spaces in the regular expression to be ignored. By allowing whitespace within regular expression literals, the literals may be significantly easier to read and modify.  This...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:regexp_y_flag&amp;amp;rev=1303949415">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-28T00:10:15+01:00</dc:date>
        <title>strawman:regexp_y_flag</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:regexp_y_flag&amp;amp;rev=1303949415</link>
        <description> See regexp y flag.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:relationships&amp;amp;rev=1375695716">
        <dc:format>text/html</dc:format>
        <dc:date>2013-08-05T09:41:56+01:00</dc:date>
        <title>strawman:relationships</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:relationships&amp;amp;rev=1375695716</link>
        <description> This proposal is based on input gathered from the March 2013 TC39 meeting, after MarkM&amp;rsquo;s discussion of &amp;ldquo;relationships&amp;rdquo;: relationships.pdf  Currently, there are three core abstractions by which an object x can represent that it is i...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:return_to_label&amp;amp;rev=1223728758">
        <dc:format>text/html</dc:format>
        <dc:date>2008-10-11T12:39:18+01:00</dc:date>
        <title>strawman:return_to_label</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:return_to_label&amp;amp;rev=1223728758</link>
        <description> Why:   If lambda expressions use the completion value but do not have a built-in return, then programmers will still need some way of aborting a computation with an early result.  More generally, aborting a computation with an early result is useful...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:revokable_proxies&amp;amp;rev=1348487235">
        <dc:format>text/html</dc:format>
        <dc:date>2012-09-24T11:47:15+01:00</dc:date>
        <title>strawman:revokable_proxies</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:revokable_proxies&amp;amp;rev=1348487235</link>
        <description> In a nutshell: with direct proxies, one can no longer write a caretaker proxy that nulls out a pointer to its target once revoked. This means that the target can no longer be garbage-collected separately from its proxy.  As pointed out by David Brua...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:sandbox_vs_maker&amp;amp;rev=1266716229">
        <dc:format>text/html</dc:format>
        <dc:date>2010-02-21T01:37:09+01:00</dc:date>
        <title>strawman:sandbox_vs_maker</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:sandbox_vs_maker&amp;amp;rev=1266716229</link>
        <description> This is a general discussion of the sandbox-style versus EMaker-style module construction semantics.   Sandboxes   When a Python program includes: import difflib it is bringing into its lexical scope, as the symbol difflib, a reference to the export...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:scoped_object_extensions&amp;amp;rev=1304055125">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-29T05:32:05+01:00</dc:date>
        <title>strawman:scoped_object_extensions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:scoped_object_extensions&amp;amp;rev=1304055125</link>
        <description> Scoped object extensions allows different libraries to define and reuse monkey patches without conflicting with each other.   Goals  Allow property extensions to any object  Extensions are only available in lexical scopes where they have been explic...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:shallow_continuations&amp;amp;rev=1274676925">
        <dc:format>text/html</dc:format>
        <dc:date>2010-05-24T04:55:25+01:00</dc:date>
        <title>strawman:shallow_continuations</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:shallow_continuations&amp;amp;rev=1274676925</link>
        <description> Every function containing the shift operator in its body (not contained in any nested functions) implicitly creates a continuation object every time it is called. The continuation object encapsulates the function call&amp;rsquo;s activation object.  Let...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:shorter_function_syntax&amp;amp;rev=1300914034">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-23T21:00:34+01:00</dc:date>
        <title>strawman:shorter_function_syntax</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:shorter_function_syntax&amp;amp;rev=1300914034</link>
        <description> Some of these may be withdrawn:   Shorter syntax for function expressions  Implicit return to make functions even shorter  Lexical this to reduce common this binding errors with optional explicit dynamic this binding  No arguments object in scope   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:simd_number&amp;amp;rev=1381425008">
        <dc:format>text/html</dc:format>
        <dc:date>2013-10-10T17:10:08+01:00</dc:date>
        <title>strawman:simd_number</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:simd_number&amp;amp;rev=1381425008</link>
        <description> SIMD (Single Instruction Multiple Data) immutable value types and operations.   Contact  John McCutchan (Google)  Peter Jensen (Intel)   Engine Implementation Status           Polyfill       V8         SpiderMonkey         Test suite   Yes      ?   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:simple_maps_and_sets&amp;amp;rev=1306645156">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-29T04:59:16+01:00</dc:date>
        <title>strawman:simple_maps_and_sets</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:simple_maps_and_sets&amp;amp;rev=1306645156</link>
        <description> See simple_maps_and_sets   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:simple_module_functions&amp;amp;rev=1295842330">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-24T04:12:10+01:00</dc:date>
        <title>strawman:simple_module_functions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:simple_module_functions&amp;amp;rev=1295842330</link>
        <description> Here we propose an enhancement to simple modules to cope with the problems created by its combination of mutable static state and the second-classness of its modules. To understand the problem, consider its example of shared state: module Counter &amp;#...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:simple_modules&amp;amp;rev=1300917365">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-23T21:56:05+01:00</dc:date>
        <title>strawman:simple_modules</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:simple_modules&amp;amp;rev=1300917365</link>
        <description> This spec has been promoted to modules.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:simple_modules_examples&amp;amp;rev=1300917397">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-23T21:56:37+01:00</dc:date>
        <title>strawman:simple_modules_examples</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:simple_modules_examples&amp;amp;rev=1300917397</link>
        <description> This spec has been promoted to modules examples.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:simultaneous_iteration&amp;amp;rev=1356064608">
        <dc:format>text/html</dc:format>
        <dc:date>2012-12-21T04:36:48+01:00</dc:date>
        <title>strawman:simultaneous_iteration</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:simultaneous_iteration&amp;amp;rev=1356064608</link>
        <description> It&amp;rsquo;s often necessary to loop over a few iterations at the same time. For example: for &amp;#40;let name of names, email of emails&amp;#41; &amp;#123;   console.log&amp;#40;'&amp;quot;' + name + '&amp;quot; &amp;lt;' + email + '&amp;gt;'&amp;#41;; &amp;#125;  Syntax   Change the synt...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:soft_bind&amp;amp;rev=1299177214">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-03T18:33:34+01:00</dc:date>
        <title>strawman:soft_bind</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:soft_bind&amp;amp;rev=1299177214</link>
        <description> Some have expressed a desire (http://infrequently.org/2010/09/javascript-uxo-removal/ TODO more links) for a this-binding strength intermediate between JavaScript&amp;rsquo;s default loose this-binding rule and the tight this binding provided by Functio...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:specification_language&amp;amp;rev=1274152634">
        <dc:format>text/html</dc:format>
        <dc:date>2010-05-18T03:17:14+01:00</dc:date>
        <title>strawman:specification_language</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:specification_language&amp;amp;rev=1274152634</link>
        <description> ES1-3 used a weird Cobol-like assembly language to describe the workings of ECMAScript. It was a confusing, error-prone notation that contributed to the misunderstanding of ECMAScript. ES5 improves on that language, adding variables and some structu...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:steve_levithan_regexp_api_improvements&amp;amp;rev=1295923429">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-25T02:43:49+01:00</dc:date>
        <title>strawman:steve_levithan_regexp_api_improvements</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:steve_levithan_regexp_api_improvements&amp;amp;rev=1295923429</link>
        <description> See What the JavaScript RegExp API Got Wrong, &amp;amp; How to Fix It  Most of these are breaking changes but there may be a way to accommodate them in Harmony.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:stoptrapping&amp;amp;rev=1322042733">
        <dc:format>text/html</dc:format>
        <dc:date>2011-11-23T10:05:33+01:00</dc:date>
        <title>strawman:stoptrapping</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:stoptrapping&amp;amp;rev=1322042733</link>
        <description> Since trapping is entirely decoupled from &amp;ldquo;protecting&amp;rdquo; a proxy in the direct proxy API, we propose the introduction of a separate operation, named Proxy.stopTrapping. The call Proxy.stopTrapping(aProxy) triggers the proxy&amp;rsquo;s stopTra...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:strawman&amp;amp;rev=1392402503">
        <dc:format>text/html</dc:format>
        <dc:date>2014-02-14T18:28:23+01:00</dc:date>
        <title>strawman:strawman</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:strawman&amp;amp;rev=1392402503</link>
        <description> This &amp;lsquo;strawman&amp;rsquo; namespace is intended to contain unapproved, preliminary proposals for the &amp;ldquo;ES-Harmony&amp;rdquo; language beyond ES6.   The old ES6 Strawman page   Strawman Proposals   Async Functions (lukeh)  Class Private State (mar...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:string_at&amp;amp;rev=1392402625">
        <dc:format>text/html</dc:format>
        <dc:date>2014-02-14T18:30:25+01:00</dc:date>
        <title>strawman:string_at</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:string_at&amp;amp;rev=1392402625</link>
        <description> This initial proposal was drafted by Mathias Bynens and originally published at mathiasbynens/String.prototype.at  A robust &amp;amp; optimized ES3-compatible polyfill for the String.prototype.at proposal for ECMAScript 6.  Spec bug ticket: &amp;lt;https://...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:string_extensions&amp;amp;rev=1392402247">
        <dc:format>text/html</dc:format>
        <dc:date>2014-02-14T18:24:07+01:00</dc:date>
        <title>strawman:string_extensions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:string_extensions&amp;amp;rev=1392402247</link>
        <description> This document is a sequel to Dave Herman&amp;lsquo;s string_extras which were &amp;ldquo;Harmonized&amp;rdquo; for inclusion in ecma-262, 6th edition.   String padding  String at    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:string_extras&amp;amp;rev=1306795242">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-30T22:40:42+01:00</dc:date>
        <title>strawman:string_extras</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:string_extras&amp;amp;rev=1306795242</link>
        <description> See string_extras   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:string_format&amp;amp;rev=1292456304">
        <dc:format>text/html</dc:format>
        <dc:date>2010-12-15T23:38:24+01:00</dc:date>
        <title>strawman:string_format</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:string_format&amp;amp;rev=1292456304</link>
        <description> It is proposed that a format method be added to String.prototype that replaces variables in strings, with an option for contextual encoding.   string.format(values, encoder, open, close, separator)  string is a string the contains variable names whi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:string_format_take_two&amp;amp;rev=1300148601">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-15T00:23:21+01:00</dc:date>
        <title>strawman:string_format_take_two</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:string_format_take_two&amp;amp;rev=1300148601</link>
        <description> EcmaScript lacks a method to format strings in a flexible and controllable manner. Most EcmaScript strings are constructed by concatenating a series of substrings. Such practice really hurts code readability. Especially for localization, it is almos...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:string_interpolation&amp;amp;rev=1257468232">
        <dc:format>text/html</dc:format>
        <dc:date>2009-11-06T00:43:52+01:00</dc:date>
        <title>strawman:string_interpolation</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:string_interpolation&amp;amp;rev=1257468232</link>
        <description>    into the enclosing interpolation without changing semantics.    ((('lit &amp;quot;foo&amp;quot;)), (('interp x)))  =~=  (('lit &amp;quot;foo&amp;quot;), ('interp x))  Auditable Exemptions  It is better to build in auditable exemptions to security rules than to f...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:string_padding&amp;amp;rev=1438197652">
        <dc:format>text/html</dc:format>
        <dc:date>2015-07-29T19:20:52+01:00</dc:date>
        <title>strawman:string_padding</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:string_padding&amp;amp;rev=1438197652</link>
        <description> This initial proposal was drafted by Kevin Grandon with input from Rick Waldron and Dave Herman. These proposals will be presented for inclusion in ecma-262, 7th edition. String.prototype.padLeft&amp;#40;minLength, fillStr = ' '&amp;#41;; &amp;nbsp; String.prot...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:string_repeat&amp;amp;rev=1303950829">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-28T00:33:49+01:00</dc:date>
        <title>strawman:string_repeat</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:string_repeat&amp;amp;rev=1303950829</link>
        <description> See String.prototype.repeat.   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:structured_clone&amp;amp;rev=1389719694">
        <dc:format>text/html</dc:format>
        <dc:date>2014-01-14T17:14:54+01:00</dc:date>
        <title>strawman:structured_clone</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:structured_clone&amp;amp;rev=1389719694</link>
        <description> For now we maintain this here: https://github.com/dslomov-chromium/ecmascript-structured-clone   Objective   The idea of this proposal is to embrace and extend (per Brendan we forget about the third word) structured clones and transferable objects c...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:subclassable-builtins&amp;amp;rev=1342645418">
        <dc:format>text/html</dc:format>
        <dc:date>2012-07-18T21:03:38+01:00</dc:date>
        <title>strawman:subclassable-builtins</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:subclassable-builtins&amp;amp;rev=1342645418</link>
        <description> A historic limitation of ECMAScript has been the inability to create fully functional &amp;ldquo;subclasses&amp;rdquo; of the abstractions defined by most of the built-in constructors in Chapter 15. While this is commonly referred to as a &amp;ldquo;subclassing...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:super_in_object_initialisers&amp;amp;rev=1300576105">
        <dc:format>text/html</dc:format>
        <dc:date>2011-03-19T23:08:25+01:00</dc:date>
        <title>strawman:super_in_object_initialisers</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:super_in_object_initialisers&amp;amp;rev=1300576105</link>
        <description> This is one of several related Object Initialiser Extensions.  This extension builds upon concepts introduced in Object Initialiser Meta Properties, Method Properties, and Other Object Initialiser Property Modifiers  This is an extension to the Clas...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:support_full_unicode_in_strings&amp;amp;rev=1337813135">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-23T22:45:35+01:00</dc:date>
        <title>strawman:support_full_unicode_in_strings</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:support_full_unicode_in_strings&amp;amp;rev=1337813135</link>
        <description> This proposal has been superseded by Unicode supplementary characters.    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:syntactic_support_for_private_names&amp;amp;rev=1346194786">
        <dc:format>text/html</dc:format>
        <dc:date>2012-08-28T22:59:46+01:00</dc:date>
        <title>strawman:syntactic_support_for_private_names</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:syntactic_support_for_private_names&amp;amp;rev=1346194786</link>
        <description> This is a proposal for syntactic extensions that make it easier to use unique and private names.   &amp;quot;At-Names&amp;quot; and Their Declaration   An &amp;ldquo;At-Name&amp;rdquo; is a new form of lexical token that consists of an @ character immediately follo...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:syntax_for_efficient_traits&amp;amp;rev=1285318087">
        <dc:format>text/html</dc:format>
        <dc:date>2010-09-24T08:48:07+01:00</dc:date>
        <title>strawman:syntax_for_efficient_traits</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:syntax_for_efficient_traits&amp;amp;rev=1285318087</link>
        <description> The Traits library deals in individual trait instances. Without VM support, this is unpleasantly expensive, requiring at least an allocation per method per instance. On the one hand, the full expressiveness of the Traits library requires it to opera...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:system&amp;amp;rev=1278457032">
        <dc:format>text/html</dc:format>
        <dc:date>2010-07-06T22:57:12+01:00</dc:date>
        <title>strawman:system</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:system&amp;amp;rev=1278457032</link>
        <description> From time to time, the ECMA TC39 committee or some other standards body introduces a standard object that a compliant ECMAScript implementation must provide. An example is the weak_references proposal, whereby the provided object(s) allow the code u...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:terminology&amp;amp;rev=1335894673">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-01T17:51:13+01:00</dc:date>
        <title>strawman:terminology</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:terminology&amp;amp;rev=1335894673</link>
        <description> In prior versions of the ECMAScript specification the term host object has been used both to designate objects, not defined by the ECMAScript specification, that are provided by the environment that is hosting the ECMAScript implementation. Such obj...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:trademarks&amp;amp;rev=1304714263">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-06T20:37:43+01:00</dc:date>
        <title>strawman:trademarks</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:trademarks&amp;amp;rev=1304714263</link>
        <description> A trademark represents a generative nominal type. A trademark has two facets:   A trademark&amp;rsquo;s brander allows one to brand objects or sets of objects with that trademark. Objects can be branded by a trademark when they&amp;rsquo;re created or at an...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:trait_composition_for_classes&amp;amp;rev=1305617947">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-17T07:39:07+01:00</dc:date>
        <title>strawman:trait_composition_for_classes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:trait_composition_for_classes&amp;amp;rev=1305617947</link>
        <description> THIS STRAWMAN IS CURRENTLY NOT IN A COHERENT STATE. Rather, it is mostly a place to collect the support for trait composition, abstract classes, required members, and multiple (trait) inheritance which have been factored out of classes_with_trait_co...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:traits_semantics&amp;amp;rev=1291524279">
        <dc:format>text/html</dc:format>
        <dc:date>2010-12-05T04:44:39+01:00</dc:date>
        <title>strawman:traits_semantics</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:traits_semantics&amp;amp;rev=1291524279</link>
        <description> This page describes the semantics of trait composition for the syntax for efficient traits strawman.  A trait is a &amp;ldquo;property descriptor map&amp;rdquo;, represented as a set of properties. Only a property descriptor map object&amp;rsquo;s own propertie...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:tuples&amp;amp;rev=1301790667">
        <dc:format>text/html</dc:format>
        <dc:date>2011-04-03T00:31:07+01:00</dc:date>
        <title>strawman:tuples</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:tuples&amp;amp;rev=1301790667</link>
        <description> Concise syntax for prototype-less, immutable, dense sequences with indexed properties. Unlike arrays, tuples cannot have holes.   Syntax  TupleLiteral ::= &amp;quot;#&amp;quot; &amp;quot;[&amp;quot; (TupleElement (&amp;quot;,&amp;quot; TupleElement)*)? &amp;quot;]&amp;quot; TupleE...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:typed_arrays&amp;amp;rev=1305698290">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-18T05:58:10+01:00</dc:date>
        <title>strawman:typed_arrays</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:typed_arrays&amp;amp;rev=1305698290</link>
        <description> The WebGL spec needs a method for high-performance access to native-typed data. That group invented its own set of objects for this, but it has now been adopted in FileAPI, FileWriter, XHR2, and is being considered for Web Sockets. Other groups like...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:types&amp;amp;rev=1243636039">
        <dc:format>text/html</dc:format>
        <dc:date>2009-05-29T22:27:19+01:00</dc:date>
        <title>strawman:types</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:types&amp;amp;rev=1243636039</link>
        <description> Harmony is intended to support optional type annotations on properties (e.g., on variables and fields). These type annotations are enforced dynamically; there is no separate static type checking phase.  Types are first-class values and can be stored...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:unicode_normalization&amp;amp;rev=1338335354">
        <dc:format>text/html</dc:format>
        <dc:date>2012-05-29T23:49:14+01:00</dc:date>
        <title>strawman:unicode_normalization</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:unicode_normalization&amp;amp;rev=1338335354</link>
        <description> This proposal removes assumptions about Unicode normalization that aren&amp;rsquo;t valid for current implementations from the ECMAScript Language Specification, and adds a simple normalization method.   Remove Invalid Assumptions   The ECMAScript Langu...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:unicode_support&amp;amp;rev=1280534598">
        <dc:format>text/html</dc:format>
        <dc:date>2010-07-31T00:03:18+01:00</dc:date>
        <title>strawman:unicode_support</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:unicode_support&amp;amp;rev=1280534598</link>
        <description> We have an interest in having more tools for identifying Unicode features.  For example, we need to be able to determine if a string is LTR or RTL. The current practice requires that a program contain complete knowledge of the distribution of direct...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:uniform_proxies&amp;amp;rev=1265081156">
        <dc:format>text/html</dc:format>
        <dc:date>2010-02-02T03:25:56+01:00</dc:date>
        <title>strawman:uniform_proxies</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:uniform_proxies&amp;amp;rev=1265081156</link>
        <description> This page describes an alternative API that gets rid of the distinct function proxies created by Proxy.createFunction. We will refer to the previous API that distinguishes object from function proxies explicitly as the &amp;ldquo;non-uniform&amp;rdquo; API ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:unique_string_values&amp;amp;rev=1305680106">
        <dc:format>text/html</dc:format>
        <dc:date>2011-05-18T00:55:06+01:00</dc:date>
        <title>strawman:unique_string_values</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:unique_string_values&amp;amp;rev=1305680106</link>
        <description> Proposal by Allen Wirfs-Brock  An alternative to the revised private_names proposal by Allen Wirfs-Brock and the original names proposal by Dave Herman and Sam Tobin-Hochstadt .  In existing ECMAScript, string values are distinguished solely based u...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:value_objects&amp;amp;rev=1335663809">
        <dc:format>text/html</dc:format>
        <dc:date>2012-04-29T01:43:29+01:00</dc:date>
        <title>strawman:value_objects</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:value_objects&amp;amp;rev=1335663809</link>
        <description> To add new immutable datatypes that are identified up to their contents rather than by reference in the heap.  This allows us to add new integer types such as int64 and bignum without extending the set of typeof tags.  It also allows us to extend th...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:value_proxies&amp;amp;rev=1306900084">
        <dc:format>text/html</dc:format>
        <dc:date>2011-06-01T03:48:04+01:00</dc:date>
        <title>strawman:value_proxies</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:value_proxies&amp;amp;rev=1306900084</link>
        <description> This page lists an extension to proxies that supports operator overloading. It is a work-in-progress and likely inconsistent in some parts.   Goals  Enable implementing new kinds of values for which the behavior of standard operators such as &amp;lsquo;...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:value_types&amp;amp;rev=1374086920">
        <dc:format>text/html</dc:format>
        <dc:date>2013-07-17T18:48:40+01:00</dc:date>
        <title>strawman:value_types</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:value_types&amp;amp;rev=1374086920</link>
        <description> This is a dump of my notes from the meeting, with Mark Miller, Jason Orendorff, Sam Ruby, and myself attending, unedited. I&amp;rsquo;ll work to turn it into something more coherent. Comments here or in es-discuss welcome. &amp;mdash; Brendan Eich 2010/01/2...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:versioning&amp;amp;rev=1325365836">
        <dc:format>text/html</dc:format>
        <dc:date>2011-12-31T21:10:36+01:00</dc:date>
        <title>strawman:versioning</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:versioning&amp;amp;rev=1325365836</link>
        <description> Excellent proposal from dherman coming very soon. &amp;mdash; Brendan Eich 2011/12/31 21:09   Prior Work   See versioning for the back-story.   Goal Thoughts   The goal is to allow new versions of ES with syntactic and non-syntactic extensions to degrad...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:weak_references&amp;amp;rev=1383967452">
        <dc:format>text/html</dc:format>
        <dc:date>2013-11-09T03:24:12+01:00</dc:date>
        <title>strawman:weak_references</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:weak_references&amp;amp;rev=1383967452</link>
        <description> This proposal is based on Jackson et.al.&amp;rsquo;s weak references and post-mortem finalization. Post-mortem finalization is a gc notification rule safe from resurrection bugs, since computation only proceeds among non-condemned objects. We specify th...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:weak_refs&amp;amp;rev=1359843943">
        <dc:format>text/html</dc:format>
        <dc:date>2013-02-02T22:25:43+01:00</dc:date>
        <title>strawman:weak_refs</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:weak_refs&amp;amp;rev=1359843943</link>
        <description> The accepted weak maps API serves important use cases for weak references, but not all. Most importantly, the observer pattern relies on an observable object holding weak references to its observers. If an observer becomes otherwise collectable, the...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:weakreferences&amp;amp;rev=1369560552">
        <dc:format>text/html</dc:format>
        <dc:date>2013-05-26T09:29:12+01:00</dc:date>
        <title>strawman:weakreferences</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:weakreferences&amp;amp;rev=1369560552</link>
        <description> weak_references  weak_refs   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=strawman:withdrawn&amp;amp;rev=1346092671">
        <dc:format>text/html</dc:format>
        <dc:date>2012-08-27T18:37:51+01:00</dc:date>
        <title>strawman:withdrawn</title>
        <link>http://wiki.ecmascript.org/doku.php?id=strawman:withdrawn&amp;amp;rev=1346092671</link>
        <description> These proposals have been withdrawn by their authors or superseded by an alternative proposal that has been accepted by TC39   lexical scope (dherman)  Functions  shorter function syntax, for defining and (or possibly only) expressing functions conc...</description>
    </item>
</rdf:RDF>
