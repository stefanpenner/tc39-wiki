<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.1" -->
<?xml-stylesheet href="http://wiki.ecmascript.org/lib/styles/feed.css" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://wiki.ecmascript.org/feed.php">
        <title>ES Wiki es3.1</title>
        <description></description>
        <link>http://wiki.ecmascript.org/</link>
        <image rdf:resource="http://wiki.ecmascript.org/lib/images/favicon.ico" />
       <dc:date>2015-09-11T07:02:35+01:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:arguments.callee&amp;amp;rev=1206913968"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:arguments_array_as_array&amp;amp;rev=1206894081"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:attribute_states&amp;amp;rev=1280848723"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:backward_compatibility_between_es3.1_and_es3&amp;amp;rev=1176627496"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:backward_compatibility_between_es4_and_es3.1&amp;amp;rev=1176627588"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:catch_clause_context_specification&amp;amp;rev=1206894244"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:conclusion&amp;amp;rev=1176628258"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:date_object&amp;amp;rev=1208811201"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:design_principles&amp;amp;rev=1176628044"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:destructuring_assignment&amp;amp;rev=1203527482"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:discussion&amp;amp;rev=1191470608"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:es3.1&amp;amp;rev=1312863247"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:es3.1_goals&amp;amp;rev=1206404571"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:es3.1_proposal_working_draft&amp;amp;rev=1296075663"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:es3.x_working_docs&amp;amp;rev=1194497312"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:es3_errata_from_mozilla&amp;amp;rev=1212034966"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:eval_function&amp;amp;rev=1206913915"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:forward_compatibility_between_es3.1_and_es4&amp;amp;rev=1176627545"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:forward_compatibility_between_es3_and_es3.1&amp;amp;rev=1212093996"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:getters_and_setters&amp;amp;rev=1206894001"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:history&amp;amp;rev=1297993641"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:identifiers_in_the_object_literal_notation&amp;amp;rev=1206894287"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:inner_functions_and_this&amp;amp;rev=1206894129"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:instantiating_primitive_type_wrappers&amp;amp;rev=1206914001"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:introduction&amp;amp;rev=1176627165"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:json_support&amp;amp;rev=1210892612"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:member_identifiers_in_dot_notation&amp;amp;rev=1206894327"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:mime_type&amp;amp;rev=1197884144"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:object_literal_notation&amp;amp;rev=1206894379"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:obsoletespecstuff&amp;amp;rev=1219786941"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:other_bug_fixes&amp;amp;rev=1206894177"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:readonly_built-in_object_contructors&amp;amp;rev=1176770764"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:relationship_with_the_es4_specification&amp;amp;rev=1176628140"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:reserved_word_reduction&amp;amp;rev=1176632743"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:resources_and_schedule&amp;amp;rev=1176628214"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:richer_reflection_capability_on_function&amp;amp;rev=1210856569"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:secure_eval&amp;amp;rev=1210257100"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:semicolon_insertion&amp;amp;rev=1177431503"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:specification_format&amp;amp;rev=1176628176"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:tail_recursive_calls&amp;amp;rev=1176631675"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:targeted_additions_to_array_string_object_date&amp;amp;rev=1211223790"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:typeof&amp;amp;rev=1204131200"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:typeof_prefix_operator&amp;amp;rev=1176633461"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=es3.1:with_statement&amp;amp;rev=1214573582"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://wiki.ecmascript.org/lib/images/favicon.ico">
        <title>ES Wiki</title>
        <link>http://wiki.ecmascript.org/</link>
        <url>http://wiki.ecmascript.org/lib/images/favicon.ico</url>
    </image>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:arguments.callee&amp;amp;rev=1206913968">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T21:52:48+01:00</dc:date>
        <title>es3.1:arguments.callee</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:arguments.callee&amp;amp;rev=1206913968</link>
        <description> Description: This is useful when making recursive calls within an anonymous function – however, it is better to use named functions.  It is better to write:    function foo () {     ... foo() ...   }  than     function () {     ... arguments.callee(...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:arguments_array_as_array&amp;amp;rev=1206894081">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T16:21:21+01:00</dc:date>
        <title>es3.1:arguments_array_as_array</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:arguments_array_as_array&amp;amp;rev=1206894081</link>
        <description> Description: Make the arguments array an &amp;ldquo;Array&amp;rdquo;. arguments should be an object that delegates to Array.prototype. The will allow array methods (particularly the slicing and mapping methods) to be applied to arguments.  The arguments arr...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:attribute_states&amp;amp;rev=1280848723">
        <dc:format>text/html</dc:format>
        <dc:date>2010-08-03T15:18:43+01:00</dc:date>
        <title>es3.1:attribute_states</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:attribute_states&amp;amp;rev=1280848723</link>
        <description> Section 8.12.9 [[DefineOwnProperty]] of the EcmaScript 5 spec describes the defining semantic constraint of the property descriptor system introduced by EcmaScript 5. The only changes which can occur to a property&amp;rsquo;s state are those described b...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:backward_compatibility_between_es3.1_and_es3&amp;amp;rev=1176627496">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T08:58:16+01:00</dc:date>
        <title>es3.1:backward_compatibility_between_es3.1_and_es3</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:backward_compatibility_between_es3.1_and_es3&amp;amp;rev=1176627496</link>
        <description> It should be possible to write programs that conditionally use new ES3.1 features such that such programs can also load and run on ES3 implementations. In order to accomplish this, new ES3.1 functionality cannot depend upon any new syntax. All new f...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:backward_compatibility_between_es4_and_es3.1&amp;amp;rev=1176627588">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T08:59:48+01:00</dc:date>
        <title>es3.1:backward_compatibility_between_es4_and_es3.1</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:backward_compatibility_between_es4_and_es3.1&amp;amp;rev=1176627588</link>
        <description> ES4 is not required to be backwards compatible with ES3.1.   &amp;mdash; Pratap Lakshman 2007/04/15 01:59   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:catch_clause_context_specification&amp;amp;rev=1206894244">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T16:24:04+01:00</dc:date>
        <title>es3.1:catch_clause_context_specification</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:catch_clause_context_specification&amp;amp;rev=1206894244</link>
        <description> Description: The specification of Catch is clear enough, but has an unfortunate consequence.  Catch is defined as creating a new object with the caught object as a property and putting the new object at the head of the scope chain.  If the caught ob...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:conclusion&amp;amp;rev=1176628258">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T09:10:58+01:00</dc:date>
        <title>es3.1:conclusion</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:conclusion&amp;amp;rev=1176628258</link>
        <description> ES3 is currently the “language of the web” and the emergence of the AJAX application style significantly expanded its importance. Even in the presence of ES4, ES3 usage will continue for many years to come. The ECMAScript user community will be best...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:date_object&amp;amp;rev=1208811201">
        <dc:format>text/html</dc:format>
        <dc:date>2008-04-21T20:53:21+01:00</dc:date>
        <title>es3.1:date_object</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:date_object&amp;amp;rev=1208811201</link>
        <description> Description: ECMAScript 3rd Edition (ES3) does not specify the syntax for date and time literals in 15.9.4.2. This is a source of ambiguity. Implementations have diverged and have come to use many heuristics for parsing date-time formats. This propo...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:design_principles&amp;amp;rev=1176628044">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T09:07:24+01:00</dc:date>
        <title>es3.1:design_principles</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:design_principles&amp;amp;rev=1176628044</link>
        <description> The broad use of ES3 imposes constraints on how we can achieve the stated goals. The design principles we shall follow are: (1) Primary focus is on correction of known errors and clarification of known ambiguities. (2) New features only considered i...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:destructuring_assignment&amp;amp;rev=1203527482">
        <dc:format>text/html</dc:format>
        <dc:date>2008-02-20T17:11:22+01:00</dc:date>
        <title>es3.1:destructuring_assignment</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:destructuring_assignment&amp;amp;rev=1203527482</link>
        <description> Destructuring Assignment should be supported as specified in ES4: http://wiki.ecmascript.org/doku.php?id=proposals:destructuring_assignment  Relevant Goal: 2, 3 Relevant Design Principle: 2a, 2b, 3 Relevant ES4 proposal: http://wiki.ecmascript.org/d...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:discussion&amp;amp;rev=1191470608">
        <dc:format>text/html</dc:format>
        <dc:date>2007-10-04T04:03:28+01:00</dc:date>
        <title>es3.1:discussion</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:discussion&amp;amp;rev=1191470608</link>
        <description> This is the discussion for the proposal to refocus TC39-TG1 on the maintenance of ES3. &amp;mdash; Pratap Lakshman 2007/03/16 15:27   See also browser profile. Here is a response to the PDF linked from es3.1 that I sent in reply to mail to the e-tc39-tg...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:es3.1&amp;amp;rev=1312863247">
        <dc:format>text/html</dc:format>
        <dc:date>2011-08-09T04:14:07+01:00</dc:date>
        <title>es3.1:es3.1</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:es3.1&amp;amp;rev=1312863247</link>
        <description> test262 tests are at test262.ecmascript.org  Kangax&amp;rsquo;s ES5 compatibility table and strict mode tests  Angus Croll&amp;rsquo;s ES5 strict mode tests  ES5-for-SES repair diagnostics at es-lab.  Rhino tracking bug  SpiderMonkey tracking bug  Search We...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:es3.1_goals&amp;amp;rev=1206404571">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-25T00:22:51+01:00</dc:date>
        <title>es3.1:es3.1_goals</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:es3.1_goals&amp;amp;rev=1206404571</link>
        <description> The goal of ES3.1 is to make a minimal set of changes to ES3 to accomplish the following:   Browser implementation unification: Consider adopting features that are already implemented in 3 of the 4 browser brands, or that are deployed in 3 out 4 use...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:es3.1_proposal_working_draft&amp;amp;rev=1296075663">
        <dc:format>text/html</dc:format>
        <dc:date>2011-01-26T21:01:03+01:00</dc:date>
        <title>es3.1:es3.1_proposal_working_draft</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:es3.1_proposal_working_draft&amp;amp;rev=1296075663</link>
        <description> The official ECMAScript 5th Edition standard can be downloaded as a PDF file from the Ecma Web Site   Prepublication Draft ECMAScript, 5.1 Edition   Final TC39 Draft   ECMAScript 5.1 is a maintenance revision of the ECMAScript 5 specification. It co...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:es3.x_working_docs&amp;amp;rev=1194497312">
        <dc:format>text/html</dc:format>
        <dc:date>2007-11-08T04:48:32+01:00</dc:date>
        <title>es3.1:es3.x_working_docs</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:es3.x_working_docs&amp;amp;rev=1194497312</link>
        <description> This documents known deviations, implementation defined behaviors, and extensions of Internet Explore&amp;rsquo;s JScript implementation relative to 262-3. It also attempts to identify common interpretations and variations among widely used ES3 implemen...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:es3_errata_from_mozilla&amp;amp;rev=1212034966">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-29T04:22:46+01:00</dc:date>
        <title>es3.1:es3_errata_from_mozilla</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:es3_errata_from_mozilla&amp;amp;rev=1212034966</link>
        <description> Description: Mozilla maintain an errata for the ES3 specification. This needs to be incorporated into ES3.1.   &amp;mdash; Pratap Lakshman 2007/04/15 03:15   I have used the ECMAScript 3rd Edition specification from the ECMA website and applied the erra...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:eval_function&amp;amp;rev=1206913915">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T21:51:55+01:00</dc:date>
        <title>es3.1:eval_function</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:eval_function&amp;amp;rev=1206913915</link>
        <description> Refer secure eval   &amp;mdash; Pratap Lakshman 2007/04/15 03:28   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:forward_compatibility_between_es3.1_and_es4&amp;amp;rev=1176627545">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T08:59:05+01:00</dc:date>
        <title>es3.1:forward_compatibility_between_es3.1_and_es4</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:forward_compatibility_between_es3.1_and_es4&amp;amp;rev=1176627545</link>
        <description> The forward compatibility goals from ES3.1 to ES4 are the same as the forward compatibility goals from ES3 to ES4. In addition, all new features in ES3.1, must also exist with identical semantics in ES4 and all features deprecated in ES3.1 must also...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:forward_compatibility_between_es3_and_es3.1&amp;amp;rev=1212093996">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-29T20:46:36+01:00</dc:date>
        <title>es3.1:forward_compatibility_between_es3_and_es3.1</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:forward_compatibility_between_es3_and_es3.1&amp;amp;rev=1212093996</link>
        <description> Ideally, all valid ES3 programs should run with the same results on ES3.1 implementations. However, imposing such a strict requirement upon a language as malleable as ECMAScript would make it almost impossible to add any new features to ES3.1. Even ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:getters_and_setters&amp;amp;rev=1206894001">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T16:20:01+01:00</dc:date>
        <title>es3.1:getters_and_setters</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:getters_and_setters&amp;amp;rev=1206894001</link>
        <description> Getters and setters should be supported as specified in the ES4 proposal: getters_and_setters We may also want to support the catchall getter and setter: catchalls If only getters and setters as specified in ES4 are supported, there is no way to cre...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:history&amp;amp;rev=1297993641">
        <dc:format>text/html</dc:format>
        <dc:date>2011-02-18T01:47:21+01:00</dc:date>
        <title>es3.1:history</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:history&amp;amp;rev=1297993641</link>
        <description> See ES3.1 Proposal Working Draft, a proposal to TC39-TG1 on the Maintenance of the ECMAScript, 3rd Edition Specification.   &amp;mdash; Pratap Lakshman 2007/04/15 01:43   ES3.1 Notes, Working Documents, Etc.   See ES3.x Working Docs for various notes an...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:identifiers_in_the_object_literal_notation&amp;amp;rev=1206894287">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T16:24:47+01:00</dc:date>
        <title>es3.1:identifiers_in_the_object_literal_notation</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:identifiers_in_the_object_literal_notation&amp;amp;rev=1206894287</link>
        <description> Description: The ES3 Specification does not allow the use of reserved words as identifiers in the key/value pairs in the literal object notation. There is no reason to have this restriction.   The following statement is currently illegal, producing ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:inner_functions_and_this&amp;amp;rev=1206894129">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T16:22:09+01:00</dc:date>
        <title>es3.1:inner_functions_and_this</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:inner_functions_and_this&amp;amp;rev=1206894129</link>
        <description> Whenever any function is invoked in the function form, this will now be bound to undefined, not to the Global object. This is not the ideal behavior, but is significantly less unsafe than the current behavior.  Whenever a function is invoked by appl...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:instantiating_primitive_type_wrappers&amp;amp;rev=1206914001">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T21:53:21+01:00</dc:date>
        <title>es3.1:instantiating_primitive_type_wrappers</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:instantiating_primitive_type_wrappers&amp;amp;rev=1206914001</link>
        <description> new Object(value), new String(), new Number(), new Boolean()  Description: This is a source of confusion. For e.g. new String() does not do what a Java programmer might think it does.  Relevant Goal: 1, 5 Relevant Design Principle: 2a, 2b Relevant E...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:introduction&amp;amp;rev=1176627165">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T08:52:45+01:00</dc:date>
        <title>es3.1:introduction</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:introduction&amp;amp;rev=1176627165</link>
        <description> The ECMA TC39 TG1 working group is working on ES4, as the next revision of ES3.  ES4 will be a major redesign of the ECMAScript language adding many new features and capabilities. Given the current broad adoption of ECMAScript and the large number o...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:json_support&amp;amp;rev=1210892612">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-15T23:03:32+01:00</dc:date>
        <title>es3.1:json_support</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:json_support&amp;amp;rev=1210892612</link>
        <description> JSON is a simple lightweight serialization format that is much used by Frameworks. Atlas, Live, YUI are heavy users.  A JSON global object is added. It provides parse and stringify methods.  JSON.parse(source, reviver)  This method parses a JSON tex...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:member_identifiers_in_dot_notation&amp;amp;rev=1206894327">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T16:25:27+01:00</dc:date>
        <title>es3.1:member_identifiers_in_dot_notation</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:member_identifiers_in_dot_notation&amp;amp;rev=1206894327</link>
        <description> Description: The ES3 Specification does not allow the use of reserved words in the dot notation. There is no reason to have this restriction.   The following statement is currently illegal, producing syntax errors. It should be legal.  if (object.fu...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:mime_type&amp;amp;rev=1197884144">
        <dc:format>text/html</dc:format>
        <dc:date>2007-12-17T09:35:44+01:00</dc:date>
        <title>es3.1:mime_type</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:mime_type&amp;amp;rev=1197884144</link>
        <description> In order to permit users to opt-in to ES3.1 it must have its own distinguished MIME type.  We ought to follow: http://www.ietf.org/rfc/rfc4329.txt. To quote from section 3:For the application/ecmascript media type, implementations MUST NOT process c...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:object_literal_notation&amp;amp;rev=1206894379">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T16:26:19+01:00</dc:date>
        <title>es3.1:object_literal_notation</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:object_literal_notation&amp;amp;rev=1206894379</link>
        <description> The use of commas should be made more regular.  Object Description: Allow a trailing comma in an object initialiser.  Relevant Goal: 1 Relevant Design Principle: 2a, 2b Relevant ES4 proposal: bug fixes    Array Description: Allow a comma between the...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:obsoletespecstuff&amp;amp;rev=1219786941">
        <dc:format>text/html</dc:format>
        <dc:date>2008-08-26T21:42:21+01:00</dc:date>
        <title>es3.1:obsoletespecstuff</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:obsoletespecstuff&amp;amp;rev=1219786941</link>
        <description> This is a working draft of a proposal to define the scope and content of a maintenance revision of ES 3 (e.g. ES 3.1). Creation of this proposal was identified as an action item at the March 2007 meeting (minutes_mar_21_2007). The initial version of...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:other_bug_fixes&amp;amp;rev=1206894177">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T16:22:57+01:00</dc:date>
        <title>es3.1:other_bug_fixes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:other_bug_fixes&amp;amp;rev=1206894177</link>
        <description> Description: Fix additional ES3 bugs already slated to be fixed in ES4.  Relevant Goal: 1 Relevant Design Principle: 2a, 2b Relevant ES4 proposal: bug fixes   &amp;mdash; Pratap Lakshman 2007/04/15 03:14  ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:readonly_built-in_object_contructors&amp;amp;rev=1176770764">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-17T00:46:04+01:00</dc:date>
        <title>es3.1:readonly_built-in_object_contructors</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:readonly_built-in_object_contructors&amp;amp;rev=1176770764</link>
        <description> Description: ES3 allows user script code to override built-in object constructors. However, this is not a common use case, and causes more problems than in solves. This should be disallowed.  Relevant Goal: 3 Relevant Design Principle: 2a, 2b Releva...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:relationship_with_the_es4_specification&amp;amp;rev=1176628140">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T09:09:00+01:00</dc:date>
        <title>es3.1:relationship_with_the_es4_specification</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:relationship_with_the_es4_specification&amp;amp;rev=1176628140</link>
        <description> There are various issues that need to be identified and researched concerning how the ES3.1 specification will relate to the ES4 specification. A quick list of possible alternatives includes:  ES4 adopts a new name (ECMAScript++, ECMAScript II, etc....</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:reserved_word_reduction&amp;amp;rev=1176632743">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T10:25:43+01:00</dc:date>
        <title>es3.1:reserved_word_reduction</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:reserved_word_reduction&amp;amp;rev=1176632743</link>
        <description> Description: Currently, the reserved word list is much too long. It not only includes ECMAScript&amp;rsquo;s keywords, it also includes all of Java&amp;rsquo;s reserved words, even including the words that Java does not use.  The list should be trimmed to i...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:resources_and_schedule&amp;amp;rev=1176628214">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T09:10:14+01:00</dc:date>
        <title>es3.1:resources_and_schedule</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:resources_and_schedule&amp;amp;rev=1176628214</link>
        <description> Developing the ES3.1 specification needs to be done within ECMA TC39 TG1 and without impacting the current schedule.   &amp;mdash; Pratap Lakshman 2007/04/15 02:10   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:richer_reflection_capability_on_function&amp;amp;rev=1210856569">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-15T13:02:49+01:00</dc:date>
        <title>es3.1:richer_reflection_capability_on_function</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:richer_reflection_capability_on_function&amp;amp;rev=1210856569</link>
        <description> Description: It is not possible to determine the name of a function or the names of its arguments without parsing the function&amp;rsquo;s source – this is a hole in the reflection functionality available through ES3. Functions should have a &amp;ldquo;name...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:secure_eval&amp;amp;rev=1210257100">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-08T14:31:40+01:00</dc:date>
        <title>es3.1:secure_eval</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:secure_eval&amp;amp;rev=1210257100</link>
        <description> Two new global objects are added: ES3_1 and SES. (The names ES3_1 and SES will surely be changed.) These objects will have eval methods.  ES3_1.eval(source, context) SES.eval(source, context)   The string is compiled is compiled as an expression and...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:semicolon_insertion&amp;amp;rev=1177431503">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-24T16:18:23+01:00</dc:date>
        <title>es3.1:semicolon_insertion</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:semicolon_insertion&amp;amp;rev=1177431503</link>
        <description> It is not reasonable for the language definition to require compilers to do semicolon insertion.  Description: “Semicolon insertion” refers to the ability to write programs while omitting semicolons between statements. ES3 does two kinds of semicolo...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:specification_format&amp;amp;rev=1176628176">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T09:09:36+01:00</dc:date>
        <title>es3.1:specification_format</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:specification_format&amp;amp;rev=1176628176</link>
        <description> Ideally, the ES3.1 specification should follow the form developed for the ES4 spec and ES4 reference implementation. If some issue arose with this approach an alternative would be to start with the ES3 spec and make the minimal set of changes necess...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:tail_recursive_calls&amp;amp;rev=1176631675">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T10:07:55+01:00</dc:date>
        <title>es3.1:tail_recursive_calls</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:tail_recursive_calls&amp;amp;rev=1176631675</link>
        <description> Description: If a function returns the result of recursively calling itself, then that call will be reformed as a loop. This optimization can significantly reduce the rate of memory consumption of recursive algorithms.  Relevant Goal: 1 Relevant Des...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:targeted_additions_to_array_string_object_date&amp;amp;rev=1211223790">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-19T19:03:10+01:00</dc:date>
        <title>es3.1:targeted_additions_to_array_string_object_date</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:targeted_additions_to_array_string_object_date&amp;amp;rev=1211223790</link>
        <description> Frameworks would benefit from such conveniences without too much additional complexity in engine implementations. Frameworks like Atlas, Live, YUI, Prototype, Dojo, etc. routinely augment the built-in types. There are various reasons for this:  (a) ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:typeof&amp;amp;rev=1204131200">
        <dc:format>text/html</dc:format>
        <dc:date>2008-02-27T16:53:20+01:00</dc:date>
        <title>es3.1:typeof</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:typeof&amp;amp;rev=1204131200</link>
        <description> typeOf(value)  Description: The typeof prefix operator returns a string based on the type of its parameter. Unfortunately, it provides the wrong result if the operand is null or an array.  The new typeOf global function is intended to replace the de...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:typeof_prefix_operator&amp;amp;rev=1176633461">
        <dc:format>text/html</dc:format>
        <dc:date>2007-04-15T10:37:41+01:00</dc:date>
        <title>es3.1:typeof_prefix_operator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:typeof_prefix_operator&amp;amp;rev=1176633461</link>
        <description> Description: The typeof operator returns a string based on the type of its operand. It does not adequately differentiate between its operands. For e.g. typeof(Array()) is considered to be object. While the typeof operator cannot be fixed now, it can...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=es3.1:with_statement&amp;amp;rev=1214573582">
        <dc:format>text/html</dc:format>
        <dc:date>2008-06-27T13:33:02+01:00</dc:date>
        <title>es3.1:with_statement</title>
        <link>http://wiki.ecmascript.org/doku.php?id=es3.1:with_statement&amp;amp;rev=1214573582</link>
        <description> with must be deprecated.  Description: The with statement allow a “shorthand” form for writing recurring access to objects. Instead of writing:  a.b.val = true; a.b.val2 = true;  one can write:  with (a.b) {  val = true;  val2 = true; }  This looks ...</description>
    </item>
</rdf:RDF>
