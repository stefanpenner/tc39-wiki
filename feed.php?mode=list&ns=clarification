<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.1" -->
<?xml-stylesheet href="http://wiki.ecmascript.org/lib/styles/feed.css" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://wiki.ecmascript.org/feed.php">
        <title>ES Wiki clarification</title>
        <description></description>
        <link>http://wiki.ecmascript.org/</link>
        <image rdf:resource="http://wiki.ecmascript.org/lib/images/favicon.ico" />
       <dc:date>2015-09-10T13:43:13+01:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:abstract_syntax_tree&amp;amp;rev=1154385079"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:adobe_as3&amp;amp;rev=1211576991"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:clarifications&amp;amp;rev=1170281172"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:code_mixing&amp;amp;rev=1149030927"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:compact_profile&amp;amp;rev=1149276368"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:dispatch_rules&amp;amp;rev=1148599370"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:drop_traits&amp;amp;rev=1148599768"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:formal_type_system&amp;amp;rev=1184092223"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:lexical_scope&amp;amp;rev=1149049971"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:multiple_compilation_units&amp;amp;rev=1161364077"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:package_semantics&amp;amp;rev=1149227879"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:runtime_types_and_conversions&amp;amp;rev=1185907557"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:scopes_for_directives_and_definitions&amp;amp;rev=1148600064"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:syntax_for_field_names_in_classes&amp;amp;rev=1148600894"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:type_hierarchy_for_numbers&amp;amp;rev=1190119475"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:type_system&amp;amp;rev=1183467714"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=clarification:which_prototype&amp;amp;rev=1213943401"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://wiki.ecmascript.org/lib/images/favicon.ico">
        <title>ES Wiki</title>
        <link>http://wiki.ecmascript.org/</link>
        <url>http://wiki.ecmascript.org/lib/images/favicon.ico</url>
    </image>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:abstract_syntax_tree&amp;amp;rev=1154385079">
        <dc:format>text/html</dc:format>
        <dc:date>2006-07-31T22:31:19+01:00</dc:date>
        <title>clarification:abstract_syntax_tree</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:abstract_syntax_tree&amp;amp;rev=1154385079</link>
        <description> Identifier   Identifier                                 ( identifier IdentifierName )  get                                     ( identifier get )  set                                     ( identifier set )  PropertyIdentifier   Identifier  *        ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:adobe_as3&amp;amp;rev=1211576991">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-23T21:09:51+01:00</dc:date>
        <title>clarification:adobe_as3</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:adobe_as3&amp;amp;rev=1211576991</link>
        <description> This section describes known incompatabilities between ES4 and AS3. This includes language constructs that have a different meaning in ES4 than they do in AS3. Not included are AS3 features that are not in ES4 (see below) and ES4 features that are n...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:clarifications&amp;amp;rev=1170281172">
        <dc:format>text/html</dc:format>
        <dc:date>2007-01-31T22:06:12+01:00</dc:date>
        <title>clarification:clarifications</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:clarifications&amp;amp;rev=1170281172</link>
        <description> These are items that we hope to clarify, not necessarily change. The existing language in the spec is considered incomplete or unclear, or a committee member is worried about something not making sense.   Syntactic issues  abstract syntax tree, what...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:code_mixing&amp;amp;rev=1149030927">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-30T23:15:27+01:00</dc:date>
        <title>clarification:code_mixing</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:code_mixing&amp;amp;rev=1149030927</link>
        <description> If we are serious about best-effort backward compatibility as a prerequisite for adoption, we ought to be thinking not just about keeping the old language semantics around as a subset, but also about the interactions which will occur when &amp;ldquo;new...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:compact_profile&amp;amp;rev=1149276368">
        <dc:format>text/html</dc:format>
        <dc:date>2006-06-02T19:26:08+01:00</dc:date>
        <title>clarification:compact_profile</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:compact_profile&amp;amp;rev=1149276368</link>
        <description> A compact profile is motivated by the need to run ECMAScript programs on very small machines, with these constraining factors:   memory: maybe a few hundreds of kilobytes of RAM available to the scripting engine  footprint: there is constrained spac...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:dispatch_rules&amp;amp;rev=1148599370">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-25T23:22:50+01:00</dc:date>
        <title>clarification:dispatch_rules</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:dispatch_rules&amp;amp;rev=1148599370</link>
        <description> It is not clear what the dispatch rules are (to me). It would be good to add specific language stating:   Which sort of overriding is allowed.  Whether the static (variable) or dynamic (object) type is used for method dispatch.  Whether any speciali...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:drop_traits&amp;amp;rev=1148599768">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-25T23:29:28+01:00</dc:date>
        <title>clarification:drop_traits</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:drop_traits&amp;amp;rev=1148599768</link>
        <description> The spec defines the behavior of static aspects of the language in terms of traits objects.  This proposal suggests that the concept of traits be modeled in terms of property attributes on prototype objects.  In particular, this proposal suggests in...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:formal_type_system&amp;amp;rev=1184092223">
        <dc:format>text/html</dc:format>
        <dc:date>2007-07-10T18:30:23+01:00</dc:date>
        <title>clarification:formal_type_system</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:formal_type_system&amp;amp;rev=1184092223</link>
        <description> Type judgments generally take the following form:    Relation Interpretation                  A ‚ä¢ B  given assumptions A, assertion B holds    For example, type checking usually takes place in a lexical context, which allows us to assume certain var...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:lexical_scope&amp;amp;rev=1149049971">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-31T04:32:51+01:00</dc:date>
        <title>clarification:lexical_scope</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:lexical_scope&amp;amp;rev=1149049971</link>
        <description> In its heart of hearts, EcmaScript wants to be a lexically scoped language.  The trouble is, the scoping mechanisms are rather sloppily defined. I propose to clean up the language describing any and all scoping constructs in the language in the more...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:multiple_compilation_units&amp;amp;rev=1161364077">
        <dc:format>text/html</dc:format>
        <dc:date>2006-10-20T17:07:57+01:00</dc:date>
        <title>clarification:multiple_compilation_units</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:multiple_compilation_units&amp;amp;rev=1161364077</link>
        <description> DO NOT EXPORT  Multiple compilation units   NEEDS:   refactoring as a GlobalFrame with external &amp;ldquo;class&amp;rdquo; loaders   (Also see the discussion page for this proposal)   Abstract   The semantics of interoperation between programs evaluated in...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:package_semantics&amp;amp;rev=1149227879">
        <dc:format>text/html</dc:format>
        <dc:date>2006-06-02T05:57:59+01:00</dc:date>
        <title>clarification:package_semantics</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:package_semantics&amp;amp;rev=1149227879</link>
        <description> Packages can be understood in terms of namespaces and compile-time rewriting. This page should detail how.   Notes   My current notes, based on some dinking around and talking to Jeff. Not intended to be normative, just for discussion.  A package &amp;l...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:runtime_types_and_conversions&amp;amp;rev=1185907557">
        <dc:format>text/html</dc:format>
        <dc:date>2007-07-31T18:45:57+01:00</dc:date>
        <title>clarification:runtime_types_and_conversions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:runtime_types_and_conversions&amp;amp;rev=1185907557</link>
        <description> DO NOT EXPORT  Type conversions   There are a number of places where type conversions occur, e.g.:   interconvertible types like int and double  interconvertible types with to methods  structural types with convertible component types  using somethi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:scopes_for_directives_and_definitions&amp;amp;rev=1148600064">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-25T23:34:24+01:00</dc:date>
        <title>clarification:scopes_for_directives_and_definitions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:scopes_for_directives_and_definitions&amp;amp;rev=1148600064</link>
        <description> This is about the compile-time meaning of certain phrases in the language, where the spec is currently unclear. These phrases all introduce names. (For completeness I&amp;rsquo;ve listed also those cases where the spec is clear.)  Updated with resolutio...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:syntax_for_field_names_in_classes&amp;amp;rev=1148600894">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-25T23:48:14+01:00</dc:date>
        <title>clarification:syntax_for_field_names_in_classes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:syntax_for_field_names_in_classes&amp;amp;rev=1148600894</link>
        <description> (suggestion retracted)  Syntax for field names in class definitions   The Integer and String literals annotated with type in record fields (ftype in syntax for type expressions) remind me: do we want to support arbitrary property names in class decl...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:type_hierarchy_for_numbers&amp;amp;rev=1190119475">
        <dc:format>text/html</dc:format>
        <dc:date>2007-09-18T12:44:35+01:00</dc:date>
        <title>clarification:type_hierarchy_for_numbers</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:type_hierarchy_for_numbers&amp;amp;rev=1190119475</link>
        <description> One topic that I&amp;rsquo;ve been pondering is the class hierarchy for ES4 where we have String/string, Boolean/boolean, Number/int/decimal/double/uint/...    Recall that the Capitalized ones are dynamic and nonfinal and nullable; the others are opposi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:type_system&amp;amp;rev=1183467714">
        <dc:format>text/html</dc:format>
        <dc:date>2007-07-03T13:01:54+01:00</dc:date>
        <title>clarification:type_system</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:type_system&amp;amp;rev=1183467714</link>
        <description> I&amp;rsquo;ve started a separate formal type system page for discussion of the formal definition of the type system.   &amp;mdash; Dave Herman 2006/05/02 09:06  The conclusion on the structural type system have been broken out as structural types and typin...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=clarification:which_prototype&amp;amp;rev=1213943401">
        <dc:format>text/html</dc:format>
        <dc:date>2008-06-20T06:30:01+01:00</dc:date>
        <title>clarification:which_prototype</title>
        <link>http://wiki.ecmascript.org/doku.php?id=clarification:which_prototype&amp;amp;rev=1213943401</link>
        <description> Edition 3 has several variations on how to create new standard objects (instances of the &amp;ldquo;standard&amp;rdquo; or &amp;ldquo;built-in&amp;rdquo; class constructors specified in the monumentally long Section 15). Some places say, e.g.:   Let A be a new arra...</description>
    </item>
</rdf:RDF>
