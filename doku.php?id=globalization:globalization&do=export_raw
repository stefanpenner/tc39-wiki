====== About this Directory ======

The globalization namespace is intended for the development of the ECMAScript Internationalization API (formerly known as ECMAScript Globalization API). This API provides customizable language-sensitive functionality as an add-on to the ECMAScript Language Specification.

Edition 1.0 of standard ECMA-402, ECMAScript Internationalization API Specification, is available on the Ecma International web site: [[http://www.ecma-international.org/ecma-402/1.0/ECMA-402.pdf|PDF]], [[http://www.ecma-international.org/ecma-402/1.0/|HTML]], [[http://www.ecma-international.org/ecma-402/1.0/ECMA-402.epub|EPUB]].

Main pages:
   * [[Specification Drafts]]: Working drafts of the specification for the API.
   * [[Meetings]]: Meeting agendas and minutes.
   * [[Strawman]]: Drafts for new features for edition 2.0 of ECMA-402. See also the [[https://bugs.ecmascript.org/buglist.cgi?product=Internationalization%20-%20ECMA-402&component=Specification&resolution=---|bugzilla list]]

Internationalization issues in the ECMAScript Language Specification itself will continue to be discussed in the [[strawman:strawman]] and [[harmony:harmony]] namespaces.

===== Goals =====

Provide an API that complements the ECMAScript Language Specification with:

  * Consistent, rich internationalization API, similar to what modern operating systems and internationalization libraries have today for C++ and Java.
  * Consistent results (not 100% identical but comparable to the data collected in CLDR or the locale support on major platforms).
  * Support for multiple locales per application.
  * Identification of locales, time zones, currencies etc. using existing standards.
  * Reuse of objects that are more expensive to create, like collators.

===== Background =====

The ECMAScript Language Specification provides limited support for internationalization. The current API offers rudimentary sorting and formatting functions like Date.toLocaleString(). The API is tied to a single locale determined by the host environment.

Developers came up with two ways of solving some of these problems:

  * Implement dedicated internationalization libraries for formatting dates and currencies and bundle them with data for the locale selected by the application.

  * Do all internationalization processing on the server and send down the results.

Both of these approaches have problems:

  * Server side processing introduces latency and requires on-line access and a server that would do internationalization work. For instance, browser extensions or browser UIs written in ECMAScript do not have any server to talk to.

  * Dedicated libraries have various limitations, like size of the library and inconsistent API. The biggest problem is the size and complexity of data needed for collation, which means that clients have to either use preprocessed data for sorting or use the server to sort data. Moreover, multiple browser extensions may end up installing multiple copies of an internationalization library or multiple internationalization libraries with mostly overlapping data/APIs.

===== Related Information =====

[[http://tools.ietf.org/html/bcp47|BCP47]]\\ 
[[http://cldr.unicode.org/|CLDR]]\\ 
[[http://icu-project.org/apiref/icu4c/|ICU]] : [[http://icu-project.org/apiref/icu4c/classNumberFormat.html|NumberFormat]], [[http://icu-project.org/apiref/icu4c/classDateFormat.html|DateFormat]], [[http://icu-project.org/apiref/icu4c/classCollator.html|Collator]]\\ 
[[http://wiki.opensocial.org/index.php?title=Gadgets.i18n_%28v0.9%29|Opensocial internationalization API]]\\ 
[[http://docs.dojocampus.org/quickstart/internationalization/number-and-currency-formatting|Dojo internationalization API]]\\ 
[[http://closure-library.googlecode.com/svn/docs/index.html|Closure internationalization API]] : [[http://closure-library.googlecode.com/svn/docs/class_goog_i18n_DateTimeFormat.html|DateTimeFormat]], [[http://closure-library.googlecode.com/svn/docs/class_goog_i18n_DateTimeParse.html|DateTimeParse]], [[http://closure-library.googlecode.com/svn/docs/class_goog_i18n_NumberFormat.html|NumberFormat]], [[http://closure-library.googlecode.com/svn/docs/class_goog_i18n_TimeZone.html|TimeZone]],
[[http://closure-library.googlecode.com/svn/docs/class_goog_i18n_MessageFormat.html|MessageFormat]]\\ 
[[http://commonjs.org/|CommonJS]]\\ 
[[http://unicode.org/reports/tr35|UTS#35]]\\
[[http://www.w3.org/International/wiki/JavaScriptInternationalization | W3C Internationalization WG's requirements for ECMAScript internationalization]]\\
[[http://msdn.microsoft.com/en-us/library/abeh092z.aspx|.Net Framework Globalization]]\\ 
[[http://docs.php.net/manual/en/book.intl.php|PHP internationalization extension]]\\
[[http://www.unicode.org/reports/tr35/#Unknown_or_Invalid_Identifiers|Unknown or invalid identifiers]]\\
{{strawman:actionscriptglobalizationpointers.pdf| ActionScript Globalization pointers (pdf)}}