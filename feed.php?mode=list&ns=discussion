<?xml version="1.0" encoding="utf-8"?>
<!-- generator="FeedCreator 1.7.1" -->
<?xml-stylesheet href="http://wiki.ecmascript.org/lib/styles/feed.css" type="text/css"?>
<rdf:RDF
    xmlns="http://purl.org/rss/1.0/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel rdf:about="http://wiki.ecmascript.org/feed.php">
        <title>ES Wiki discussion</title>
        <description></description>
        <link>http://wiki.ecmascript.org/</link>
        <image rdf:resource="http://wiki.ecmascript.org/lib/images/favicon.ico" />
       <dc:date>2015-09-10T15:17:53+01:00</dc:date>
        <items>
            <rdf:Seq>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:argument_this&amp;amp;rev=1179525548"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:arrays&amp;amp;rev=1185897194"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:block_expressions&amp;amp;rev=1149029983"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:browser_profile&amp;amp;rev=1173641484"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:builtin_classes&amp;amp;rev=1164759653"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:bytearray&amp;amp;rev=1169771761"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:catchalls&amp;amp;rev=1173823026"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:classes_as_structural_types_with_branding&amp;amp;rev=1183465164"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:coroutines_from_threads&amp;amp;rev=1162081772"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:date_and_time&amp;amp;rev=1184705788"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:date_literal_syntax&amp;amp;rev=1153327336"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:decimal&amp;amp;rev=1186012211"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:destructuring_assignment&amp;amp;rev=1248992698"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:dictionary&amp;amp;rev=1189536029"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:discussions&amp;amp;rev=1186666064"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:enumerability&amp;amp;rev=1149030860"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:expression_closures&amp;amp;rev=1158959723"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:extend_regexps&amp;amp;rev=1182374890"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:generic_functions&amp;amp;rev=1187431371"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:grammar&amp;amp;rev=1162407890"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:hashcodes&amp;amp;rev=1180448917"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:intrinsic_namespace&amp;amp;rev=1147907233"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:is_as_to&amp;amp;rev=1173819892"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:iterators_and_generators&amp;amp;rev=1209670124"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:local_packages&amp;amp;rev=1148594593"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:maintenance_of_es3&amp;amp;rev=1191470508"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:meta_objects&amp;amp;rev=1173640497"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:ml&amp;amp;rev=1162081884"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:multiple_compilation_units&amp;amp;rev=1158957921"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:name_objects&amp;amp;rev=1170741184"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:nullability&amp;amp;rev=1149227525"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:numbers&amp;amp;rev=1184906533"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:object_literals_type_of&amp;amp;rev=1183467595"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:operators&amp;amp;rev=1186667997"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:proper_tail_calls&amp;amp;rev=1147890053"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:reference_evaluator&amp;amp;rev=1162409241"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:reformed_with&amp;amp;rev=1161708926"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:reserved_words&amp;amp;rev=1149057581"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:resurrected_eval&amp;amp;rev=1181087925"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:slice_syntax&amp;amp;rev=1159376470"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:stack_inspection&amp;amp;rev=1169243254"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:static_generics&amp;amp;rev=1169746698"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:strict_and_standard_modes&amp;amp;rev=1179440773"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:string_formatting&amp;amp;rev=1158962639"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:structural_types&amp;amp;rev=1183465792"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:switch_class&amp;amp;rev=1171349437"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:syntax_for_pragmas&amp;amp;rev=1148666108"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:syntax_for_type_expression&amp;amp;rev=1149054776"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:type_parameters&amp;amp;rev=1163779901"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:typeof&amp;amp;rev=1149058530"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:update_unicode&amp;amp;rev=1170740565"/>
                <rdf:li rdf:resource="http://wiki.ecmascript.org/doku.php?id=discussion:versioning&amp;amp;rev=1206844070"/>
            </rdf:Seq>
        </items>
    </channel>
    <image rdf:about="http://wiki.ecmascript.org/lib/images/favicon.ico">
        <title>ES Wiki</title>
        <link>http://wiki.ecmascript.org/</link>
        <url>http://wiki.ecmascript.org/lib/images/favicon.ico</url>
    </image>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:argument_this&amp;amp;rev=1179525548">
        <dc:format>text/html</dc:format>
        <dc:date>2007-05-18T21:59:08+01:00</dc:date>
        <title>discussion:argument_this</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:argument_this&amp;amp;rev=1179525548</link>
        <description> This is the discussion page for argument this.  Counter-examples   A counterexample for argument-this for object:   let o = {x:3, f:function () this.x} : {x:int, f:function():int}  let o2 = {f:function () 0} : {f:function():int}  let m = o.f;  o2.f ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:arrays&amp;amp;rev=1185897194">
        <dc:format>text/html</dc:format>
        <dc:date>2007-07-31T15:53:14+01:00</dc:date>
        <title>discussion:arrays</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:arrays&amp;amp;rev=1185897194</link>
        <description> This is the discussion page for the array proposal.   Limitations in the type syntax   It will not be possible to indicate a tuple of length 1. This is probably not a big problem in practice (it&amp;rsquo;s not an important use case), and a programmer w...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:block_expressions&amp;amp;rev=1149029983">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-30T22:59:43+01:00</dc:date>
        <title>discussion:block_expressions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:block_expressions&amp;amp;rev=1149029983</link>
        <description> This is a discussion page for block_expressions.  &amp;quot;let ref&amp;quot; as a &amp;quot;reformed with&amp;quot;   This is not a proposal, just some musings. (As noted below, this feature probably does not pay for itself. &amp;mdash; Lars T Hansen 2006/05/09 23:37)...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:browser_profile&amp;amp;rev=1173641484">
        <dc:format>text/html</dc:format>
        <dc:date>2007-03-11T19:31:24+01:00</dc:date>
        <title>discussion:browser_profile</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:browser_profile&amp;amp;rev=1173641484</link>
        <description> DO NOT EXPORT  Here are some datapoints (wearing the hats of an engine implementor, serviceProvider, and Frameworks provider)  Our experience with JScript.NET shows that it ended up as a &amp;lsquo;different&amp;rsquo; language than ES3 - it had language fe...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:builtin_classes&amp;amp;rev=1164759653">
        <dc:format>text/html</dc:format>
        <dc:date>2006-11-29T00:20:53+01:00</dc:date>
        <title>discussion:builtin_classes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:builtin_classes&amp;amp;rev=1164759653</link>
        <description> This is the discussion page for builtin_classes.  Finalize Syntax   We agreed, IIRC, to use intrinsic as the namespace for meta-object protocol hooks such as call. Also, I think we should use construct, not new as a keyword in context, for the const...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:bytearray&amp;amp;rev=1169771761">
        <dc:format>text/html</dc:format>
        <dc:date>2007-01-26T00:36:01+01:00</dc:date>
        <title>discussion:bytearray</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:bytearray&amp;amp;rev=1169771761</link>
        <description> (This is the discussion page for bytearray)  Bits or Bytes   At minutes_jan_24_2007, we discussed alternatives including larger element types than bytes, and Lars suggested going the other way: a mutable bit buffer type. Graydon cited Erlang&amp;rsquo;s...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:catchalls&amp;amp;rev=1173823026">
        <dc:format>text/html</dc:format>
        <dc:date>2007-03-13T21:57:06+01:00</dc:date>
        <title>discussion:catchalls</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:catchalls&amp;amp;rev=1173823026</link>
        <description> This is the discussion page for catchalls.  Older discussion   One user expectation, fed and watered by E4X, is that methods are not properties, or to avoid this JS oxymoron, that methods are not in the default property namespace:  js&amp;gt; x = &amp;lt;ro...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:classes_as_structural_types_with_branding&amp;amp;rev=1183465164">
        <dc:format>text/html</dc:format>
        <dc:date>2007-07-03T12:19:24+01:00</dc:date>
        <title>discussion:classes_as_structural_types_with_branding</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:classes_as_structural_types_with_branding&amp;amp;rev=1183465164</link>
        <description> Although this is perhaps not the best example since it uses recursive types and possibly this types.   In the July meeting, we decided on covariant subtyping, so MatingDuck &amp;lt;: MatingBird does indeed hold.   Our proposed structural array types, wi...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:coroutines_from_threads&amp;amp;rev=1162081772">
        <dc:format>text/html</dc:format>
        <dc:date>2006-10-29T00:29:32+01:00</dc:date>
        <title>discussion:coroutines_from_threads</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:coroutines_from_threads&amp;amp;rev=1162081772</link>
        <description> This page contains a sketch of how to implement coroutines (generators) using threads in Concurrent ML (CML). The code repository contains a much more complete and up-to-date version, so this is just here for historical purposes.   &amp;mdash; Dave Herm...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:date_and_time&amp;amp;rev=1184705788">
        <dc:format>text/html</dc:format>
        <dc:date>2007-07-17T20:56:28+01:00</dc:date>
        <title>discussion:date_and_time</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:date_and_time&amp;amp;rev=1184705788</link>
        <description> This is the discussion page for date_and_time.  Lack of Historical DST   See Mozilla bug 365349. Thanks to U.S. Representative Ed Markey, the U.S. is about to enter Daylight Savings Time this weekend, three weeks early compared to last year. ES1-3 a...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:date_literal_syntax&amp;amp;rev=1153327336">
        <dc:format>text/html</dc:format>
        <dc:date>2006-07-19T16:42:16+01:00</dc:date>
        <title>discussion:date_literal_syntax</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:date_literal_syntax&amp;amp;rev=1153327336</link>
        <description> This is the discussion page for date_literal_syntax.  Discussion   Should there be support for Julian dates (yyyy-ddd format) and a Date.prototype.toJulianString method?   &amp;mdash; Lars T Hansen 2006/04/21 09:02  At the dawn of time, in 1995, the guy...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:decimal&amp;amp;rev=1186012211">
        <dc:format>text/html</dc:format>
        <dc:date>2007-08-01T23:50:11+01:00</dc:date>
        <title>discussion:decimal</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:decimal&amp;amp;rev=1186012211</link>
        <description> This is the discussion page for decimal.  Assorted Issues   I&amp;rsquo;ve been working with QA on testing the decimal additions to Tamarin. Several questions have come up. There was some discussion within the ActionScript team, but it was agreed that t...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:destructuring_assignment&amp;amp;rev=1248992698">
        <dc:format>text/html</dc:format>
        <dc:date>2009-07-30T22:24:58+01:00</dc:date>
        <title>discussion:destructuring_assignment</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:destructuring_assignment&amp;amp;rev=1248992698</link>
        <description> This is the discussion page for destructuring_assignment.  Generalized destructuring binding   (Moved into the proposal.  &amp;mdash; Lars T Hansen 2006/06/05 00:12)   My comment in the proposal   I commented under &amp;ldquo;For in statement&amp;rdquo; in the ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:dictionary&amp;amp;rev=1189536029">
        <dc:format>text/html</dc:format>
        <dc:date>2007-09-11T18:40:29+01:00</dc:date>
        <title>discussion:dictionary</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:dictionary&amp;amp;rev=1189536029</link>
        <description> This is the discussion page for the dictionary proposal and for the oopKoolAid proposal.   Discussion   Looks good, but rather than a structure for constructor parameters, why not optional parameters?   public function Dict&amp;#40;equals = intrinsic::=...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:discussions&amp;amp;rev=1186666064">
        <dc:format>text/html</dc:format>
        <dc:date>2007-08-09T13:27:44+01:00</dc:date>
        <title>discussion:discussions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:discussions&amp;amp;rev=1186666064</link>
        <description> The following proposal discussions have been archived here, please keep in alpha order:   arrays  block expressions  browser profile  builtin classes  bytearray  catchalls  classes as structural types with branding  date_and_time  date literal synta...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:enumerability&amp;amp;rev=1149030860">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-30T23:14:20+01:00</dc:date>
        <title>discussion:enumerability</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:enumerability&amp;amp;rev=1149030860</link>
        <description> This is the discussion page for enumerability.  Old Proposal (not taken)   Instead of a meta DontEnum bit on each property, define a builtin namespace called enumerable:  namespace enumerable  The for-in and for-each-in operators will find all the e...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:expression_closures&amp;amp;rev=1158959723">
        <dc:format>text/html</dc:format>
        <dc:date>2006-09-22T21:15:23+01:00</dc:date>
        <title>discussion:expression_closures</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:expression_closures&amp;amp;rev=1158959723</link>
        <description> This is the discussion page for expression closures.  Alternatives   Shorter spelling   We could use a different spelling for the expression form of function, but then this feature wouldn&amp;rsquo;t be &amp;ldquo;free.&amp;rdquo; Besides, everyone feels that i...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:extend_regexps&amp;amp;rev=1182374890">
        <dc:format>text/html</dc:format>
        <dc:date>2007-06-20T21:28:10+01:00</dc:date>
        <title>discussion:extend_regexps</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:extend_regexps&amp;amp;rev=1182374890</link>
        <description> This is the discussion page for extend regexps.  Discussion   Intersection and subtraction   Russ Cox raised the issue on es4-discuss that the current intersection and subtraction operators \&amp;amp; and \- have two problems:  precedence: what does [a-...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:generic_functions&amp;amp;rev=1187431371">
        <dc:format>text/html</dc:format>
        <dc:date>2007-08-18T10:02:51+01:00</dc:date>
        <title>discussion:generic_functions</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:generic_functions&amp;amp;rev=1187431371</link>
        <description> This is the discussion page for the generic functions proposal.  Rationale etc for aspects of the proposals   Arguments in favor of generic functions  powerful operator overloading  powerful ad-hoc overloading &amp;ndash; more powerful than C++ style, s...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:grammar&amp;amp;rev=1162407890">
        <dc:format>text/html</dc:format>
        <dc:date>2006-11-01T19:04:50+01:00</dc:date>
        <title>discussion:grammar</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:grammar&amp;amp;rev=1162407890</link>
        <description> This is a quick-and-dirty translation of Lars&amp;rsquo; Java AST interfaces.  type ustring = string (* not actually unicode, maybe switch to int array to be unicode-y? *) and ident = ustring and numberType =   DECIMAL | DOUBLE | INT | UINT | NUMBER  an...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:hashcodes&amp;amp;rev=1180448917">
        <dc:format>text/html</dc:format>
        <dc:date>2007-05-29T14:28:37+01:00</dc:date>
        <title>discussion:hashcodes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:hashcodes&amp;amp;rev=1180448917</link>
        <description> This is the discussion page for hashcodes.  Older discussion   This proposal is to standardize a technique of acquiring a small scalar (a string or an integer) representing the identity of an object. This is very helpful in creating efficient (hash-...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:intrinsic_namespace&amp;amp;rev=1147907233">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-17T23:07:13+01:00</dc:date>
        <title>discussion:intrinsic_namespace</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:intrinsic_namespace&amp;amp;rev=1147907233</link>
        <description> This is the discussion page for intrinsic_namespace.  Questions/Comments   Should we make intrinsic a keyword, or a const definition that can be shadowed. The current spec says that public, private, protected and internal are keywords and cannot be ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:is_as_to&amp;amp;rev=1173819892">
        <dc:format>text/html</dc:format>
        <dc:date>2007-03-13T21:04:52+01:00</dc:date>
        <title>discussion:is_as_to</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:is_as_to&amp;amp;rev=1173819892</link>
        <description> This is the discussion page for is_as_to.  Concerns about this proposal   I am a little uncertain on whether this proposal is &amp;ldquo;ready&amp;rdquo;.   Some of the issues addressed tie in with the type system, strict and standard modes, and strict-vs-s...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:iterators_and_generators&amp;amp;rev=1209670124">
        <dc:format>text/html</dc:format>
        <dc:date>2008-05-01T19:28:44+01:00</dc:date>
        <title>discussion:iterators_and_generators</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:iterators_and_generators&amp;amp;rev=1209670124</link>
        <description> See iterators and generators for the re-drafted proposal based on this discussion.  Recent comments and questions   Doubts about the Enumerator example   I think the type system says that    class C {    function f() : T {}  }  is not a subtype of  ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:local_packages&amp;amp;rev=1148594593">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-25T22:03:13+01:00</dc:date>
        <title>discussion:local_packages</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:local_packages&amp;amp;rev=1148594593</link>
        <description> (Also see proposals:local packages.)   Alternative: Syntactic keyword to introduce a local package   An alternative syntax to private package is to use a syntactic keyword, eg local, as the package name or as the first token in the package name:    ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:maintenance_of_es3&amp;amp;rev=1191470508">
        <dc:format>text/html</dc:format>
        <dc:date>2007-10-04T04:01:48+01:00</dc:date>
        <title>discussion:maintenance_of_es3</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:maintenance_of_es3&amp;amp;rev=1191470508</link>
        <description> Moved to es3.1:discussion.  ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:meta_objects&amp;amp;rev=1173640497">
        <dc:format>text/html</dc:format>
        <dc:date>2007-03-11T19:14:57+01:00</dc:date>
        <title>discussion:meta_objects</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:meta_objects&amp;amp;rev=1173640497</link>
        <description> This is the discussion page for proposals:meta_objects.  Use of structural types   I am worried that the use of structural types in this proposals will not be good for implementations that wish to make the (required!) meta-objects immutable, since t...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:ml&amp;amp;rev=1162081884">
        <dc:format>text/html</dc:format>
        <dc:date>2006-10-29T00:31:24+01:00</dc:date>
        <title>discussion:ml</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:ml&amp;amp;rev=1162081884</link>
        <description> I&amp;rsquo;m putting in some notes on SML of New Jersey for the moment, so people can start working with it. Graydon, if you&amp;rsquo;d like to put in some information about OCaml as well, that would be useful.   Downloading   The most recent version of S...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:multiple_compilation_units&amp;amp;rev=1158957921">
        <dc:format>text/html</dc:format>
        <dc:date>2006-09-22T20:45:21+01:00</dc:date>
        <title>discussion:multiple_compilation_units</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:multiple_compilation_units&amp;amp;rev=1158957921</link>
        <description> Both the 3rd Edition and the 4th Edition Draft define only the meaning of a single Program executing in a single global environment (where &amp;ldquo;Program&amp;rdquo; is the initial nonterminal in the language grammar). However, all major implementations ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:name_objects&amp;amp;rev=1170741184">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-06T05:53:04+01:00</dc:date>
        <title>discussion:name_objects</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:name_objects&amp;amp;rev=1170741184</link>
        <description> This is the discussion page for name objects  Discussion   ISSUE: should Name define a toString that attempts to compute a qualified name expression?   &amp;mdash; Brendan Eich 2007/02/01 00:38  This is hard to do because there is no good way to express...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:nullability&amp;amp;rev=1149227525">
        <dc:format>text/html</dc:format>
        <dc:date>2006-06-02T05:52:05+01:00</dc:date>
        <title>discussion:nullability</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:nullability&amp;amp;rev=1149227525</link>
        <description> This is the discussion page for nullability.  Dave's proposal   Notation   All (pre-defined) types are written capitalized, including:   Object  String  Number  Int  Double  Boolean   Justification: lowercase type names introduce confusing associati...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:numbers&amp;amp;rev=1184906533">
        <dc:format>text/html</dc:format>
        <dc:date>2007-07-20T04:42:13+01:00</dc:date>
        <title>discussion:numbers</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:numbers&amp;amp;rev=1184906533</link>
        <description> (this is the discussion page for numbers)  Open issues, July 2007   Class hierarchy (ticket 3)   An older discussion item further down concludes that Number isn&amp;rsquo;t a natural base class for int, uint, and decimal, but I think this understanding ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:object_literals_type_of&amp;amp;rev=1183467595">
        <dc:format>text/html</dc:format>
        <dc:date>2007-07-03T12:59:55+01:00</dc:date>
        <title>discussion:object_literals_type_of</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:object_literals_type_of&amp;amp;rev=1183467595</link>
        <description> (Moved here from type_system (moved there from destructuring assignment.))  Conclusion: ES4 will have non-recursive structural types that can be declared and named:   type Goose = {name: string, email: string, noisy: boolean};  The name is just shor...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:operators&amp;amp;rev=1186667997">
        <dc:format>text/html</dc:format>
        <dc:date>2007-08-09T13:59:57+01:00</dc:date>
        <title>discussion:operators</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:operators&amp;amp;rev=1186667997</link>
        <description> This is the discussion page for operators.  Too weak to be included?   I think this feature is too weak to be included. Here are some reasons why I think that:   Uncontrollable subtleties in dispatch: Adding eg a == operator to one class and then co...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:proper_tail_calls&amp;amp;rev=1147890053">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-17T18:20:53+01:00</dc:date>
        <title>discussion:proper_tail_calls</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:proper_tail_calls&amp;amp;rev=1147890053</link>
        <description> This is a discussion page for proper_tail_calls.  For-effect calls in tail position   The spec requires that the call to f() below is a tail call:   function f&amp;#40;&amp;#41; &amp;#123; return 37; &amp;#125;   function g&amp;#40;&amp;#41; &amp;#123; f&amp;#40;&amp;#41;; &amp;#125; In E...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:reference_evaluator&amp;amp;rev=1162409241">
        <dc:format>text/html</dc:format>
        <dc:date>2006-11-01T19:27:21+01:00</dc:date>
        <title>discussion:reference_evaluator</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:reference_evaluator&amp;amp;rev=1162409241</link>
        <description> This approach is traditionally known as definitional interpreters, thanks to a classic paper by Reynolds.   ML   I&amp;rsquo;m linking to a separate discussion on ML as a central place to discuss information about ML: how to install and use ML, how to g...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:reformed_with&amp;amp;rev=1161708926">
        <dc:format>text/html</dc:format>
        <dc:date>2006-10-24T16:55:26+01:00</dc:date>
        <title>discussion:reformed_with</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:reformed_with&amp;amp;rev=1161708926</link>
        <description> This is the discussion page for reformed_with.  Comments   This may be implied but does the type expression constrain runtime lookup to the fixed bindings of the type annotation? I say yes but just want to make sure. If no, you still have the possib...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:reserved_words&amp;amp;rev=1149057581">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-31T06:39:41+01:00</dc:date>
        <title>discussion:reserved_words</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:reserved_words&amp;amp;rev=1149057581</link>
        <description> (this is the discussion page for reserved_words)  Discussion   At the Redmond meeting on April 21 we discussed doing away with reserved words, on (as I understand it) Douglas Crockford&amp;rsquo;s recommendation (See http://www.crockford.com/javascript/...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:resurrected_eval&amp;amp;rev=1181087925">
        <dc:format>text/html</dc:format>
        <dc:date>2007-06-05T23:58:45+01:00</dc:date>
        <title>discussion:resurrected_eval</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:resurrected_eval&amp;amp;rev=1181087925</link>
        <description> (This is the discussion page for resurrected eval.)  eval by any other name   It turns out that many crunched Ajax apps (certainly google.com ones) do things like Da=eval; ... d=Da(e). Now at least Mozilla-based browsers, Netscape included in the ol...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:slice_syntax&amp;amp;rev=1159376470">
        <dc:format>text/html</dc:format>
        <dc:date>2006-09-27T17:01:10+01:00</dc:date>
        <title>discussion:slice_syntax</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:slice_syntax&amp;amp;rev=1159376470</link>
        <description> Separated from slice syntax.   Discussion   Minor and barely related point: Are you proposing to actually expose intrinsic::charAt at the language level or is this just handy shorthand for what the implementation would be doing?   &amp;mdash; Lars T Han...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:stack_inspection&amp;amp;rev=1169243254">
        <dc:format>text/html</dc:format>
        <dc:date>2007-01-19T21:47:34+01:00</dc:date>
        <title>discussion:stack_inspection</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:stack_inspection&amp;amp;rev=1169243254</link>
        <description> This is the discussion page for stack_inspection.  Old Proposal   Examples   The following demonstrates stack marks that build up during a computation: var key = 'length computation'; &amp;nbsp; function length&amp;#40;array, index&amp;#41; &amp;#123;   if &amp;#40;ind...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:static_generics&amp;amp;rev=1169746698">
        <dc:format>text/html</dc:format>
        <dc:date>2007-01-25T17:38:18+01:00</dc:date>
        <title>discussion:static_generics</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:static_generics&amp;amp;rev=1169746698</link>
        <description> This is the discussion page for static generics  Discussion   I used to see this as bloat but on reflection I&amp;rsquo;m in favor.  It&amp;rsquo;s unclear to me if the &amp;ldquo;construct&amp;rdquo; has much use. Could you elaborate?   &amp;mdash; Lars T Hansen 2006/...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:strict_and_standard_modes&amp;amp;rev=1179440773">
        <dc:format>text/html</dc:format>
        <dc:date>2007-05-17T22:26:13+01:00</dc:date>
        <title>discussion:strict_and_standard_modes</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:strict_and_standard_modes&amp;amp;rev=1179440773</link>
        <description> [Since the purpose of this pragma is limited to fixing some quirks in the builtin conversions, we decided to write the rules direclty into the definition of strict verification &amp;mdash; Jeff Dyer 2006/06/07 11:10]  What is the ideal pragma identifier...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:string_formatting&amp;amp;rev=1158962639">
        <dc:format>text/html</dc:format>
        <dc:date>2006-09-22T22:03:59+01:00</dc:date>
        <title>discussion:string_formatting</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:string_formatting&amp;amp;rev=1158962639</link>
        <description>  &amp;mdash; Brendan Eich 2006/03/01 00:03   sprintf suggestion   For the type-safe formatter, perhaps the following works.  Currently missing from this proposal: the exact formatting specifiers and their meanings.   Syntax   format&amp;#40; literal-string,...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:structural_types&amp;amp;rev=1183465792">
        <dc:format>text/html</dc:format>
        <dc:date>2007-07-03T12:29:52+01:00</dc:date>
        <title>discussion:structural_types</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:structural_types&amp;amp;rev=1183465792</link>
        <description> Conclusion: ES4 will have non-recursive structural types; that is:   type Person = {name:string, bestFriend:Person} // error Structural types and the DOM connection   Graydon points out that forbidding recursive types seems to rule out obvious DOM-l...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:switch_class&amp;amp;rev=1171349437">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-13T06:50:37+01:00</dc:date>
        <title>discussion:switch_class</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:switch_class&amp;amp;rev=1171349437</link>
        <description> This is a discussion page for switch_class.  Syntax note   The variable introduces in the switch head is really not necessary, I suggest we move to a syntax of the form   switch type (E:T) {    case (a:U) { ... }    default (t:T) { ... }  }  If the ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:syntax_for_pragmas&amp;amp;rev=1148666108">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-26T17:55:08+01:00</dc:date>
        <title>discussion:syntax_for_pragmas</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:syntax_for_pragmas&amp;amp;rev=1148666108</link>
        <description> (previous syntax discussion)  Syntax   Pragmas may occur only at the head of certain syntactic units: the program, package body, function body, class body, and block. (In practice pragmas will follow import clauses.)  Pragmas are introduced with the...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:syntax_for_type_expression&amp;amp;rev=1149054776">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-31T05:52:56+01:00</dc:date>
        <title>discussion:syntax_for_type_expression</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:syntax_for_type_expression&amp;amp;rev=1149054776</link>
        <description> (this is the discussion page for syntax_for_type_expressions)  Questions/Comments  Remind me, or point me to where it says, what the meaning of brockets is in a type expression. Answering my own question: Brockets are one of the proposed notations f...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:type_parameters&amp;amp;rev=1163779901">
        <dc:format>text/html</dc:format>
        <dc:date>2006-11-17T16:11:41+01:00</dc:date>
        <title>discussion:type_parameters</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:type_parameters&amp;amp;rev=1163779901</link>
        <description> This is the discussion page for type_parameters.  Late-breaking proposal for more readable syntax   From my blog, a comment from Tom Palmer:  &amp;ldquo;My recommendation might not look much like C++, but I find this much easier to read (and I&amp;rsquo;ve ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:typeof&amp;amp;rev=1149058530">
        <dc:format>text/html</dc:format>
        <dc:date>2006-05-31T06:55:30+01:00</dc:date>
        <title>discussion:typeof</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:typeof&amp;amp;rev=1149058530</link>
        <description> (this is the discussion page for typeof)  Previous proposal and discussion   We are adding some new fundamental types in edition 4. What should the result of typeof be when a value of one of these new types is its operand?     Type Result Comment   ...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:update_unicode&amp;amp;rev=1170740565">
        <dc:format>text/html</dc:format>
        <dc:date>2007-02-06T05:42:45+01:00</dc:date>
        <title>discussion:update_unicode</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:update_unicode&amp;amp;rev=1170740565</link>
        <description> (This is the discussion page for proposals:update unicode.)  We need to add better handling for non-BMP characters. Currently, the String class supports surrogate pairs for extended characters.   Extended Unicode character constants   I propose to a...</description>
    </item>
    <item rdf:about="http://wiki.ecmascript.org/doku.php?id=discussion:versioning&amp;amp;rev=1206844070">
        <dc:format>text/html</dc:format>
        <dc:date>2008-03-30T02:27:50+01:00</dc:date>
        <title>discussion:versioning</title>
        <link>http://wiki.ecmascript.org/doku.php?id=discussion:versioning&amp;amp;rev=1206844070</link>
        <description> (See the versioning proposal, from which this was split.)  Open Issues  &amp;ldquo;The paragraph quoted above from RFC 4329 implies that content written in future versions of ES may vary the value of a version parameter to shield new scripts from older,...</description>
    </item>
</rdf:RDF>
