===== Completion-let =====

A simple expression form for doing local bindings.

===== Syntax =====

<code>
Expression ::= ... | "let" "(" (LetBinding ("," LetBinding)*)? ")" Block
LetBinding ::= Pattern(false) ("=" AssignmentExpression)?
</code>

See [[strawman:pattern matching]] for the definition of ''Pattern''.

===== Scope =====

  * all variable bindings in LetHead are in scope in the body
  * each variable binding in scope in subsequent head expressions? (let*) or not? (let)

===== Evaluation =====

  * evaluate the RHS expressions in left-to-right order
  * extend scope chain
  * variables with no RHS are bound to the ''undefined'' value
  * evaluate body
  * result value is completion of the block
