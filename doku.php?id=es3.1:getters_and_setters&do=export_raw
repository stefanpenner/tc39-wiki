Getters and setters should be supported as specified in the ES4 proposal: [[proposals:getters_and_setters]]
We may also want to support the catchall getter and setter: [[proposals:catchalls]]
If only getters and setters as specified in ES4 are supported, there is no way to create getters and setters for dynamic properties that are not known at design time except by creating a object literal string and doing an eval on it, nor is it possible to define getters and setters after an object has been created. This creates a serious limitation, since one of the major use cases is in data binding which depends on dynamic realization of property names, and I assume that we don't want to be increasing the usage of eval. Current JS implementations provide __define{G|S}etter__ to dynamically define getters and setters, however this is not currently in ES4. I think it is critical that we either push for some mechanism for dynamically defining getters and setters in both ES3.1 and ES4, or we accept catchalls for ES3.1


Relevant Goal: [[es3.1:es3.1_goals|2, 3]]\\
Relevant Design Principle: [[es3.1:design_principles|2a, 2b, 3]]\\
Relevant ES4 proposal: [[proposals:getters_and_setters]]

 --- //[[kzyp@dojotoolkit.org|Kris Zyp]]//