===== Attending =====

  * Allen
  * Brendan
  * Jeff
  * Graydon
  * Chris
  * Lars
  * Pratap
  * Dan
  * Francis
  * Doug

===== Agenda =====

  * Proposal cleanup:
    * [Lars] [[proposals:dictionary|The "map" proposal]], a value -> value map facility based on hash tables.
    * [Lars] [[proposals:arrays|The arrays proposal]], much scaled back since last month, now mostly cementing things we've agreed on already.
    * [Lars] [[proposals:vector|The vectors proposal]], a facility for FORTRAN-like arrays built on parameterized types.
    * [Lars] [[proposals:generic functions|The generic functions proposal]], a proposal for multimethods with type dispatch.
  * Schedule, other administrivia
  * Open tickets

===== Minutes =====


==== Schedule ====

  * Lars: we should have a hard deadline at the end of the next f2f for proposals approved/not approved
  * Jeff: how serious are we about that?  We probably need to be
  * Graydon: things need to be pinned down wrt type parameters
  * Jeff: things need to be pinned down wrt structural types 
  * Brendan: agree we need an RI in which to play with 
  * Lars: suggest we close the proposal space, then make another pass over all of them to see if they make sense, fix what can be fixed, reject (defer) the rest.  Move all bug work into the Trac.  The proposals pages can be edited if there's no spec to reflect bug fixes, but no new proposals.
  * Brendan/Jeff: seems OK.

==== Map ====

  * Lars will fix the IdentityMap proposal as per Graydon's suggestions and move it to next week's agenda.


==== Arrays ====

  * Graydon: how does this fit with the language, really?
  * Lars: I'm just trying to give meaning to structural array types
  * Brendan: No particularly unique problems here, default values create problems elsewhere too
  * Conclusion: ???
    * for a trac-bugfixed (thanks to Lars) version of a long-standing proposal, this seems to excite little controversy and only some (generalized?) angst.
    * I don't see anyone objecting to specifics, and builtins and the self-hosted compiler (last I looked) were using array structural types.
    * I therefore assert that this proposal is acceptable without further specific objections.
    * We can weigh it against all proposals by the September face to face.  --- //[[brendan@mozilla.org|Brendan Eich]] 2007/08/28 22:30//

==== Vectors ====

No objections to this proposal.  We accept it.


==== Multimethods ====

  * No problems seen yet except wrt the meaning of inheritance among parameterized types
  * Open question: do we need local extensions (like in Dylan)?
  * We'll let this gestate for a little while longer


==== Parameterized types ====

  * Graydon is getting closer but has had to make a number of assumptions.
    * He was going to get it compiling soon (couple of days maybe).
    * We could use a write-up of the assumptions.
    * And a list of the places where the "are these types related" predicate bails to false for want of better specs.
    * Anything else?  --- //[[brendan@mozilla.org|Brendan Eich]] 2007/08/28 22:30//
