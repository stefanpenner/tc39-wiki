We have an interest in having more tools for identifying Unicode features.

For example, we need to be able to determine if a string is LTR or RTL. The current practice requires that a program contain complete knowledge of the distribution of directionality within the character set. It would be better if that could be put in a standard function.

    String.prototype.direction()

It returns 'ltr' or 'rtl'.

We could have other functions to determine if a character is a letter, or digit, or modifier, etc.
We could also have UTF8 conversions and extended plane calculations.

 --- //[[crock@yahoo-inc.com|Douglas Crockford]] 2010/05/17 22:19//

Past work, still relevant:

  * ES4 [[proposals:update_unicode|update Unicode]] proposal ([[discussion:update_unicode|discussion page]])
  * ES4 proposal for [[proposals:extend_regexps#extending_regexps_for_unicode_ranges|Unicode character classes in regexps]] ([[discussion:extend_regexps#extending_regexps_for_unicode_ranges|discussion]])

 --- //[[brendan@mozilla.org|Brendan Eich]] 2010/05/18 19:58//

W3C I18N WG has [[http://www.w3.org/International/wiki/JavaScriptInternationalization|a prioritized list of requirements]]. It also refers to a couple of 7-year old proposals by Markus Scherer:

   * [[http://sites.google.com/site/markusicu/unicode/es/unicode-2003|ES4 Unicode support]]
   * [[http://sites.google.com/site/markusicu/unicode/es/i18n-2003|ES4 I18N]]

Most of I18N API requirements are dealt with in [[http://wiki.ecmascript.org/doku.php?id=strawman:i18n_api|the strawman proposal on I18N APIs]] while the full Unicode support is dealt with here. However, some of items in I18N WG's requirement list and Markus' proposal are missing. 

 --- //[[jungshik@google.com|Jungshik Shin]] 2010/07/28 10:29//