====== ES3.1-WG Phone Conference, 15 July 2008 ======
===== Dial-in =====
Time: 8:00 - 9:00 (PST): 

Tel: 866 500 6738 (US); 203 480 8000 (intâ€™l) 

Passcode: 885535 

===== Attendees =====
  * Graydon Hoare (Mozilla)
  * Doug Crockford (Yahoo!)
  * Sam Ruby (IBM)
  * Adam Peller (IBM)
  * Allen Wirfs-Brock (Microsoft)
  * Pratap Lakshman (Microsoft)

===== Agenda =====
  * Decimal

===== Minutes =====
**Decimal**

Focusing on sample implementation presently; not so much on updating the spec - downloadable implementations shared out for Windows, Linux, and Darwin - feedback received on the discuss lists and some bugs have been opened for tracking (in bugzilla) - looking to make spec updates after the Oslo meeting - in that case it is essential to have IBM representation at the meeting; to say what the spec will look like when complete - the spec is already quite representative - evaluating Allen's proposal of having only statics - Mike might come to the meeting.

**Revised attributes proposal**

Graydon not looked at it yet - specifically "Flexible", which was earlier "Dynamic" - dependent on what we mean for a property to go away - ran into same issues modeling fixtures in ES4 - impacts the way names will get looked up - the name lookup models in ES3.1 and ES4 subtly different - ES4 uses a faster and simpler name lookup - yes, need to be careful; number of little semantic issues related to getter/setter properties and normal properties, and when you can replace one with the other, and what these attributes mean in these cases - need to get the same ultimately with ES4.

**Strict mode**

Still some discomfort - could end up with complex subset relationships - could complicate testing - all of ES4 is opt-in - if an ES3 program is served to an ES4 implementation, and the program does not opt-in to ES4 behaviour, it will run exactly as if run on an ES3 implementation; it will just have access to an __ES4__ global name, and a way to detect if the implementation is capable of running ES4 - this notion of strict mode came about because of versioning - what is the versioning story in Es4 - that is still being fleshed out - it will be opt-in at the script tag level - ES4 opt-in started of as a directive to the compiler to enforce good-taste - you opt-in to get more features - in the case of ES3.1 you opt-in to remove features - opt-in is based on the presence of a particular string literal at the start of a compilation unit - strict mode is important; Yahoo! are making a big bet on Caja, and the availability of strict mode will go a long way in increasing the confidence on systems like Caja.

**const**

should const be allowed only at the top level - not confident if implementers will honour such a specification; they will find ways to introduce const at block level too - history indicates as much; look what happened in the case of function declarations not being permitted inside blocks - we can argue both for and against this - if we choose to allow only top level consts, can we make sure that we keep the option open to get it right in a future revision of the spec - can we add informative guidance in the spec saying that if you as an implement or want to support const at block level, here is how it should behave - the spec should also say how it should not behave; important, so that we can get it right in the next revision.

Meeting adjourned.