====== Agenda ======

  * Is there a compelling use-case for parameterized functions? Do they add enough value for the additional complexity they introduce?
  * Enums support? I've added JScript syntax for enums at bottom of https://intranet.mozilla.org/ECMA/wiki/doku.php?id=discussion:switch_class
  * We need to re-export the wiki. That should enable us to get richer external feedback.
  * Do we have adequate feedback from JavaScript engine implementors (who are not already on TG1) on ES4?
 --- //[[pratapl@microsoft.com|Pratap Lakshman]] 2007/02/13 07:46//

Presumably by "engine implementors (who are not already on TG1)" you mean commercially important engines?  The only major script-enabled browsers I can think of that are not represented are Safari and Netfront/Access.  Then there's Rhino, now important because it's part of Java SE, but I had assumed Brendan and Graydon represented that.  There are many minor engines (many more than listed on http://en.wikipedia.org/wiki/List_of_JavaScript_engines) but they are often noncompliant / subset / experimental, and anyway their authors have the ability to comment on the draft on the es4-disucss list.

There was one embedded-size commercial engine that was heavily promoted some years back, but I can't remember... maybe Chris knows.  There's a Wiki page internally at Opera that lists all of these ;-)

 --- //[[lth@acm.org|Lars T Hansen]] 2007/02/13 08:20//


====== Resolved ======

  * Magic call and convert hooks on classes
    * ''function to C() { }'' for conversions, instead of ''intrinsic static function to() { }'' in class ''C''.
    * ''function call C() { }'' for calling class ''C'' (ES1-3 ''%%[[Call]]%%'' internal method), instead of ''intrinsic static function invoke() { }'' in class ''C''
    * Ed proposed these long ago; he was right.
  * Logical connective forms
    * ''&&='' and ''||='' approved (they're in AS3 but not JScript.NET)
    * ''^^'' and ''^^='' denied (they aren't in AS3 or JScript.NET)
  * Pratap's issues
    * Type parameters for functions are a basic part of the type system (consider ''interface I.<T> { function m():T; }'').
    * ''enum'' based on JScript.NET
      * looks like it will fit without breaking anything
      * creates subrange types of int or uint
      * but do we need the int or uint type annotation?
      * secret bit feature? TG1 to study MSDN docs
    * Re-export of wiki soon, at next face-to-face if not sooner.
    * We think we have enough feedback from implementors to finish ES4.
      * Reference implementation, released in binary easy-to-run form, will help find bugs and shake out final ES4 this year.
      * Lars's comment above notes we have all majors represented.
      * Brendan recalled Apple's interest but apparent lack of time, so you could say "they had their chance" or "they trust us not to screw up" -- possibly both ;-).
      * [[http://www.mozilla.org/rhino/|Rhino]] has new and motivated hackers contributing, and some of them promise to track ES4.