====== intrinsic::global ======

===== Motivation =====

It was proposed at the [[meetings:minutes_jul_27_2006|Oslo f2f in July]] that we should provide a way of naming the global object.

===== Spec =====

The expression
<code>
    intrinsic::global
</code>
evaluates to a reference to the global object in effect for the calling code.

The result of this program is ''true'':

<code>
    a = new Object();
    a == eval("intrinsic::global", [a]);
</code>

===== Implications, discussion =====

If we were to provide quasi-global objects as a security mechanism then ''intrinsic::global'' would evaluate to a reference to the appropriate quasi-global object, not the true global object.  This is as for the extended ''eval'' form shown above.

Implementations that provide multiple global objects must return the "right" object.  Normally there should be no doubt about what that means, but the spec might note that code compiled in a package and code compiled outside a package might return different values for ''intrinsic::global''.

 --- //[[lth@opera.com|Lars T Hansen]] 2006/09/22 04:35//