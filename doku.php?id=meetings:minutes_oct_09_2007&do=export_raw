====== Minutes for the October 9, 2007 phone conference ======




===== Attending =====

  * Waldemar
  * Jeff
  * Cormac
  * Graydon
  * Lars
  * Dave
  * Brendan

===== Agenda =====

  * Schedule
    * Proposal that the November f2f goes over 3 days (7-9 November) with a 5-hour session each day and at least one day dedicated to RI review / hackathon
  * Remaining proposal tickets
    * [[http://bugs.ecmascript.org/ticket/171|#171]] Should the class for the Math object be exposed?
    * [[http://bugs.ecmascript.org/ticket/220|#220]] The "Math" object should be const-bound
    * [[http://bugs.ecmascript.org/ticket/216|#216]] Operators for uint arithmetic
    * [[http://bugs.ecmascript.org/ticket/221|#221]] Abandon "use numbertype" in its current form
    * [[http://bugs.ecmascript.org/ticket/222|#222]] New "use decimal" pragma to control precision and rounding in a more useful manner
    * [[http://bugs.ecmascript.org/ticket/223|#223]] Final discussion on names of predefined union types, notably for numbers
    * [[http://bugs.ecmascript.org/ticket/224|#224]] Expression-level type annotations




===== Minutes =====

  * Schedule
    * Thu-Fri 8/9 Nov business meeting, five-hour sessions each day
  * Tickets
    * #171: Expose the type of Math?
      * No real cost
      * Security concerns?
      * The implementation will know the type in any case...
      * No real support for this
      * => Do not expose the type
    * #220: should "Math" be const-bound?
      * General consensus that const-ness is good
      * => Make it "const"
    * #216: uint functions
      * WH, GH, LTH: namespace, functions
      * => Make it so
    * #221: kill "use numbertype"
      * => We kill it
    * #222: "use decimal", resurrected
      * => Accepted in part; see ticket for details
    * #223: "AnyNumber" etc
      * => "AnyNumber" etc are in
      * => "FloatNumber" is in
    * #224: Type annotations on expressions?
      * Pragmatic issue
      * "cast" does this, more or less -- strict mode could give it more teeth
      * => already fixed, more or less

